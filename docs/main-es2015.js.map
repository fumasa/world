{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/_component/map-tool/map-tool.component.ts","./src/_component/map-tool/map-tool.component.html","./src/_enum/world.biome.ts","./src/_generator/world.generator.ts","./src/_model/coordinate.ts","./src/_model/layer.ts","./src/_model/point.ts","./src/_model/vector.ts","./src/_model/world.info.ts","./src/_utils/biome.color.ts","./src/_utils/conversor.ts","./src/_utils/helper.ts","./src/_utils/perlin.noise.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AAChB;AACZ;AACX;AAChB;AAEwB;;;;AAY1C,MAAM,gBAAgB;IAgB3B;QAfA,UAAK,GAAmB,IAAI,4EAAc,EAAE,CAAC;QAKtC,eAAU,GAAG,QAAQ,CAAC;QAE7B,aAAQ,GAAG,IAAI,qDAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,SAAI,GAAG,CAAC,CAAC;QAET,SAAI,GAAG,EAAE,CAAC;QACV,SAAI,GAAG,IAAI,CAAC;QAEZ,eAAU,GAAG,GAAG,CAAC;QAwCV,WAAM,GAAG,IAAI,CAAC;IArCrB,CAAC;IAED,8CAA8C;IAC9C,mDAAmD;IACnD,8DAA8D;IAC9D,+DAA+D;IAC/D,sEAAsE;IACtE,+CAA+C;IAC/C,sBAAsB;IACtB,YAAY;IACZ,eAAe;IACf,sEAAsE;IACtE,QAAQ;IACR,QAAQ;IACR,IAAI;IAEJ,oDAAoD;IACpD,yBAAyB;IACzB,kEAAkE;IAClE,QAAQ;IACR,IAAI;IAEJ,eAAe;QAEb,gBAAgB;QAEhB,sBAAsB;QACtB,qCAAqC;QACrC,4BAA4B;QAC5B,MAAM;QACN,mBAAmB;QAEnB,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAGM,MAAM;QACX,qBAAqB;QACrB,yBAAyB;QACzB,WAAW;QACX,uCAAuC;QACvC,8BAA8B;QAC9B,QAAQ;QACR,IAAI;QACJ,8BAA8B;IAChC,CAAC;IAEO,eAAe;QAErB,IAAI,CAAC,OAAO,GAAuB,IAAI,CAAC,MAAM,CAAC,aAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/E,MAAM,UAAU,GAAG,kDAAkB,EAAE,CAAC;QACxC,MAAM,GAAG,GAAG,yCAAS,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE9C,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAC7C,MAAM,MAAM,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;QAEjD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;QAE1C,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAEhD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAE1D,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAChD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;gBAC9C,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEvC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACnD,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACrB,MAAM,OAAO,GAAG,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAC;oBAC/E,IAAI,IAAI,GAAG,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;oBACpE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;wBAC3B,IAAI,IAAI,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;oBAC/C,CAAC,CAAC,CAAC;oBACH,IAAI,IAAI,GAAG,CAAC;oBACZ,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBAChC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;oBAC9B,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;oBACjC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;oBAElC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;gBAEH,iDAAiD;gBACjD,mDAAmD;gBACnD,0FAA0F;gBAC1F,gCAAgC;gBAChC,+CAA+C;gBAC/C,kBAAkB;gBAClB,MAAM;YACR,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,iDAAiD;QACjD,0DAA0D;QAC1D,wDAAwD;QAExD,mDAAmD;QAEnD,2DAA2D;QAC3D,8CAA8C;QAE9C,0FAA0F;QAC1F,gCAAgC;QAChC,uEAAuE;QACvE,2CAA2C;QAC3C,kBAAkB;QAClB,MAAM;IAER,CAAC;IAED,wBAAwB;IACxB,oFAAoF;IACpF,6CAA6C;IAE7C,kDAAkD;IAClD,oDAAoD;IAEpD,6CAA6C;IAC7C,+CAA+C;IAE/C,uFAAuF;IAEvF,+DAA+D;IAC/D,wDAAwD;IACxD,iDAAiD;IACjD,4CAA4C;IAE5C,wCAAwC;IACxC,8CAA8C;IAC9C,yEAAyE;IACzE,wEAAwE;IAExE,+CAA+C;IAE/C,0DAA0D;IAE1D,mDAAmD;IACnD,8CAA8C;IAC9C,OAAO;IACP,IAAI;IAEI,YAAY;QAClB,IAAI,CAAC,OAAO,GAAuB,IAAI,CAAC,MAAM,CAAC,aAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/E,MAAM,UAAU,GAAG,kDAAkB,EAAE,CAAC;QAExC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAC7C,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAE/C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;QAE1C,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;QAElF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEO,cAAc,CAAC,KAAgB,EAAE,aAAa,GAAG,KAAK;QAC5D,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,IAAI,qDAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3G,IAAI,KAAK,GAAG,gEAAU,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEvC,IAAI,aAAa,EAAE;oBACjB,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;wBACvB,CAAC,EAAE,CAAC;qBACL;yBAAM;wBACL,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;qBAC9B;iBACF;gBAED,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE/B,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAE1B,GAAG,EAAE,CAAC;aACP;SACF;QACD,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,SAAS,IAAI,QAAQ,GAAG,IAAI,KAAK,IAAI,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC;QAE/E,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,eAAe,CAAC,KAAa,EAAE,MAAc;QACnD,IAAI,GAAG,GAAG,CAAC,CAAC;QAEZ,MAAM,IAAI,GAAsB,IAAI,iBAAiB,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;QAE1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,IAAI,qDAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3G,IAAI,KAAK,GAAG,gEAAU,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEvC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE/B,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAE1B,GAAG,EAAE,CAAC;aACP;SACF;QACD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,KAAK,IAAI,MAAM,EAAE,CAAC,CAAC;QAEtD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,oCAAoC;IACpC,oFAAoF;IACpF,6CAA6C;IAE7C,kDAAkD;IAClD,oDAAoD;IAEpD,6CAA6C;IAC7C,+CAA+C;IAE/C,gGAAgG;IAEhG,iDAAiD;IACjD,+CAA+C;IAC/C,IAAI;IAEJ,oEAAoE;IACpE,iDAAiD;IACjD,+BAA+B;IAC/B,iCAAiC;IACjC,mCAAmC;IACnC,mBAAmB;IACnB,oBAAoB;IACpB,mBAAmB;IAEnB,mDAAmD;IACnD,oDAAoD;IAEpD,qDAAqD;IACrD,qDAAqD;IAErD,kEAAkE;IAClE,2KAA2K;IAE3K,0CAA0C;IAC1C,6CAA6C;IAC7C,yFAAyF;IAEzF,oCAAoC;IAEpC,kCAAkC;IAClC,2DAA2D;IAE3D,oDAAoD;IAEpD,sDAAsD;IACtD,yCAAyC;IACzC,wBAAwB;IACxB,+CAA+C;IAC/C,iBAAiB;IAEjB,kDAAkD;IAElD,mCAAmC;IACnC,uCAAuC;IACvC,uCAAuC;IACvC,uCAAuC;IAEvC,mBAAmB;IACnB,YAAY;IACZ,UAAU;IAEV,mFAAmF;IACnF,wBAAwB;IACxB,UAAU;IACV,QAAQ;IACR,IAAI;IAEI,iBAAiB,CAAC,KAAa,EAAE,MAAc,EAAE,aAAa,GAAG,KAAK;QAC5E,OAAO,IAAI,OAAO,CAAmD,CAAC,OAAO,EAAE,EAAE;YAC/E,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,MAAM,KAAK,GAAsB,IAAI,iBAAiB,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;YAE3E,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;gBACtD,IAAI,KAAK,GAAG,gEAAU,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEvC,IAAI,aAAa,EAAE;oBACjB,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;wBACvB,CAAC,EAAE,CAAC;qBACL;yBAAM;wBACL,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;qBAC9B;iBACF;gBAED,IAAI,aAAa,GAAG,6DAAS,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBACzE,IAAI,IAAI,GAAG,6DAAS,CAAC,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE1D,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvB,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAE3B,GAAG,EAAE,CAAC;YAER,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,SAAS,IAAI,QAAQ,GAAG,IAAI,KAAK,IAAI,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC;gBACnF,OAAO,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;;gFA1VU,gBAAgB;gGAAhB,gBAAgB;;;;;;;;QClB7B,yEACE;QAAA,+EAA4C;QAA5B,wIAAS,YAAQ,IAAC;QAAC,4DAAS;QAC5C,8DAAgB;QAAhB,0EAAgB;QAClB,4DAAM;;6FDeO,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;kBAGE,uDAAS;mBAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;kBACrC,uDAAS;mBAAC,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;;;;;;;;;;;;;AErBrC;AAAA;AAAA,IAAY,UAWX;AAXD,WAAY,UAAU;IACpB,qDAAS;IACT,2DAAY;IACZ,qDAAS;IACT,6CAAK;IACL,6CAAK;IACL,6CAAK;IACL,6CAAK;IACL,+CAAM;IACN,mDAAQ;IACR,2CAAI;AACN,CAAC,EAXW,UAAU,KAAV,UAAU,QAWrB;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACT;AACO;AACG;AACF;AACE;AACR;AACA;AACF;AAElC,MAAM,cAAc;IAEzB,YAAmB,OAAO,CAAC,EAAE,UAAU,GAAG,IAAI,EAAS,SAAS,IAAI;QAAjD,SAAI,GAAJ,IAAI,CAAI;QAA4B,WAAM,GAAN,MAAM,CAAO;QAD5D,UAAK,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAE7D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,0DAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,0DAAM,CAAC,OAAO,CAAC;QAC/D,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC;IAEO,WAAW,CAAC,IAAI;QACtB,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE;YACxB,IAAI,IAAI,KAAK,CAAC;SACf;QACD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,IAAI,GAAG,GAAG,EAAE;YACd,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC;SACnB;IACH,CAAC;IAEO,aAAa,CAAC,KAAK,EAAE,IAAI;QAC/B,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;aACnD;iBACI;gBACH,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;aAC1D;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,gBAAgB,CAAC,IAAI,GAAG,CAAC;QAC/B,MAAM,IAAI,GAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5D,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI;gBACrB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;;gBAEvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;SACpC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAClC,IAAI,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACxD,CAAC,IAAI,CAAC,CAAC;QACP,OAAO,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAEM,cAAc,CAAC,UAAsB,EAAE,IAAI,GAAG,CAAC,EAAE,eAAwB,KAAK;QACnF,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;YAChC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;SAC1B;QACD,IAAI,KAAK,GAAG,6DAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,sBAAqB;QACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,0DAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QACxG,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,YAAY,EAAE;YACjB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,0DAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YAClG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,0DAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;SACjG;QACD,OAAO,IAAI,8DAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IACjE,CAAC;IAEM,oBAAoB,CAAC,KAAa,EAAE,MAAc,EAAE,YAAmC,IAAI;QAChG,OAAO,IAAI,OAAO,CAAc,CAAC,OAAO,EAAE,EAAE;YAC1C,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,MAAM,GAAG,GAAgB,EAAE,CAAC;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,IAAI,qDAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC/F,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG;wBAAE,SAAS,EAAE,CAAC;oBACtC,IAAI,SAAS,KAAK,IAAI,EAAE;wBACtB,SAAS,CAAC,IAAI,CAAC,CAAC;qBACjB;oBACD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACf,KAAK,EAAE,CAAC;iBACT;aACF;YACD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,YAAY,uDAAM,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,iBAAiB,KAAK,IAAI,SAAS,EAAE,CAAC,CAAC;YACnI,OAAO,CAAC,GAAG,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,YAAY,CAAC,IAAI,GAAG,MAAM;QAC/B,OAAO,IAAI,OAAO,CAAc,CAAC,OAAO,EAAE,EAAE;YAC1C,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,MAAM,KAAK,GAAG,uDAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;YACpC,MAAM,GAAG,GAAgB,EAAE,CAAC;YAC5B,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,EAAE,SAAS,IAAI,EAAE,EAAE,SAAS,IAAI,IAAI,EAAE;gBAC5D,KAAK,IAAI,QAAQ,GAAG,CAAC,GAAG,EAAE,QAAQ,IAAI,GAAG,EAAE,QAAQ,IAAI,IAAI,EAAE;oBAC3D,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,+DAAU,CAAC,uDAAM,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,uDAAM,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;oBACtI,KAAK,EAAE,CAAC;iBACT;aACF;YACD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,YAAY,uDAAM,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,iBAAiB,KAAK,EAAE,CAAC,CAAC;YACtH,OAAO,CAAC,GAAG,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,UAAU,CAAC,KAAa,EAAE,MAAc;QAC7C,OAAO,IAAI,OAAO,CAAU,OAAO,CAAC,EAAE;YACpC,OAAO,CAAC,GAAG,CAAC,sBAAsB,KAAK,IAAI,MAAM,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YACjE,MAAM,UAAU,GAAa,EAAE,CAAC;YAChC,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBACnC,MAAM,EAAE,GAAG,IAAI,qDAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9B,IAAI,IAAI,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG;wBAAE,SAAS;oBAC/F,MAAM,EAAE,GAAG,IAAI,qDAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpC,IAAI,IAAI,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG;wBAAE,SAAS;oBAC/F,MAAM,EAAE,GAAG,IAAI,qDAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpC,IAAI,IAAI,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG;wBAAE,SAAS;oBAC/F,MAAM,EAAE,GAAG,IAAI,qDAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1C,IAAI,IAAI,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG;wBAAE,SAAS;oBAE/F,uDAAM,CAAC,qCAAqC,CAAC,UAAU,EAAE,IAAI,uDAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBAC7E,uDAAM,CAAC,qCAAqC,CAAC,UAAU,EAAE,IAAI,uDAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBAC7E,uDAAM,CAAC,qCAAqC,CAAC,UAAU,EAAE,IAAI,uDAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBAC7E,uDAAM,CAAC,qCAAqC,CAAC,UAAU,EAAE,IAAI,uDAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBAE7E,KAAK,EAAE,CAAC;iBACT;aACF;YACD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAU,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YAC/D,IAAI,oBAAoB,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;YAC3C,MAAM,MAAM,GAAY,EAAE,CAAC;YAC3B,OAAO,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtC,MAAM,OAAO,GAAa,EAAE,CAAC;gBAC7B,MAAM,WAAW,GAAG,oBAAoB,CAAC,GAAG,EAAE,CAAC;gBAC/C,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC9B,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;oBAC5C,MAAM,SAAS,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACpF,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBAC3B;gBACD,MAAM,CAAC,IAAI,CAAC,IAAI,qDAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;aAC1C;YACD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YACjD,sCAAsC;YACtC,8BAA8B;YAC9B,yCAAyC;YACzC,MAAM;YACN,0EAA0E;YAC1E,OAAO,CAAC,MAAM,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,MAAM,CAAC,KAAa,EAAE,MAAc;QACzC,OAAO,IAAI,OAAO,CAAa,OAAO,CAAC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YAChD,MAAM,UAAU,GAAa,EAAE,CAAC;YAChC,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBACnC,MAAM,EAAE,GAAG,IAAI,qDAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9B,IAAI,IAAI,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG;wBAAE,SAAS;oBAC/F,MAAM,EAAE,GAAG,IAAI,qDAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpC,IAAI,IAAI,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG;wBAAE,SAAS;oBAC/F,MAAM,EAAE,GAAG,IAAI,qDAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpC,IAAI,IAAI,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG;wBAAE,SAAS;oBAC/F,MAAM,EAAE,GAAG,IAAI,qDAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC1C,IAAI,IAAI,CAAC,cAAc,CAAC,6DAAS,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG;wBAAE,SAAS;oBAE/F,UAAU,CAAC,IAAI,CAAC,IAAI,uDAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBACpC,UAAU,CAAC,IAAI,CAAC,IAAI,uDAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBACpC,UAAU,CAAC,IAAI,CAAC,IAAI,uDAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBACpC,UAAU,CAAC,IAAI,CAAC,IAAI,uDAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;oBAEpC,KAAK,EAAE,CAAC;iBACT;aACF;YACD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,EAAE,UAAU,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YAChE,IAAI,cAAc,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;YACrC,MAAM,gBAAgB,GAAa,EAAE,CAAC;YACtC,OAAO,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChC,MAAM,MAAM,GAAG,cAAc,CAAC,GAAG,EAAE,CAAC;gBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE;oBAC/C,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC/B;qBAAM;oBACL,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC3E;aACF;YACD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YACrE,IAAI,oBAAoB,GAAG,CAAC,GAAG,gBAAgB,CAAC,CAAC;YACjD,MAAM,YAAY,GAAe,EAAE,CAAC;YACpC,OAAO,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACtC,MAAM,KAAK,GAAa,EAAE,CAAC;gBAC3B,MAAM,WAAW,GAAG,oBAAoB,CAAC,GAAG,EAAE,CAAC;gBAC/C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC9B,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;oBAC5C,MAAM,SAAS,GAAG,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACpF,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACzB;gBACD,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC1B;YACD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YAC7D,MAAM,oBAAoB,GAAe,EAAE,CAAC;YAC5C,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBAC7B,MAAM,aAAa,GAAa,EAAE,CAAC;gBACnC,IAAI,MAAM,GAAW,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrC,IAAI,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;wBACpC,MAAM,GAAG,IAAI,uDAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;qBACjD;yBAAM;wBACL,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;wBAChC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;qBACxB;iBACF;gBACD,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAChC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YAC7E,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,YAAY,CAAC,IAAI,GAAG,MAAM;QAC/B,MAAM,GAAG,GAAkB,EAAE,CAAC;QAC9B,MAAM,UAAU,GAAG,IAAI,+DAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,OAAO,GAAiB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAClE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,OAAO,GAAG,CAAC;IACb,CAAC;IAEO,YAAY,CAAC,UAAU,GAAG,IAAI,+DAAU,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG,MAAM;QACnE,MAAM,OAAO,GAAiB,EAAE,CAAC;QACjC,IAAI,MAAM,GAAiB,EAAE,CAAC;QAC9B,GAAG;YACD,UAAU,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAC3C,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SACtD,QAAQ,MAAM,KAAK,EAAE,EAAC;QAEvB,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,MAAM,SAAS,GAAG,EAAE,CAAC;YACrB,MAAM,CAAC,OAAO,CAAC,CAAC,KAAiB,EAAE,EAAE;gBACnC,2BAA2B;gBAC3B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC5C,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;YACH,MAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;YACrC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,QAAoB,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAa,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS,CAAC,KAAK,SAAS,CAAC,CAAC;YAC3K,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;YACjC,IAAI,UAAU,KAAK,WAAW,EAAE;gBAC9B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;aAClD;iBAAM,IAAI,UAAU,GAAG,WAAW,EAAE;gBACnC,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;aAC7D;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;aAC5C;SACF;QAED,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAE/B,OAAO,OAAO,CAAC;IACjB,CAAC;IAEO,oBAAoB,CAAC,UAAsB,EAAE,IAAI,GAAG,MAAM;QAChE,MAAM,MAAM,GAAiB,EAAE,CAAC;QAChC,MAAM,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACpD,IAAI,QAAQ,CAAC,KAAK,KAAK,+DAAU,CAAC,SAAS,EAAE;YAC3C,uCAAuC;YACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;QACD,MAAM,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACtD,IAAI,SAAS,CAAC,KAAK,KAAK,+DAAU,CAAC,SAAS,EAAE;YAC5C,0CAA0C;YAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpB;QACD,MAAM,IAAI,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACpD,IAAI,QAAQ,CAAC,KAAK,KAAK,+DAAU,CAAC,SAAS,EAAE;YAC3C,uCAAuC;YACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;QACD,MAAM,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACtD,IAAI,SAAS,CAAC,KAAK,KAAK,+DAAU,CAAC,SAAS,EAAE;YAC5C,0CAA0C;YAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;;;;;;;;;;;;;ACpTD;AAAA;AAAA;AAA2C;AAEpC,MAAM,UAAU;IACrB,YAAmB,QAAgB,EAAS,SAAiB,EAAS,MAAe;QAAlE,aAAQ,GAAR,QAAQ,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAEnF,WAAW,CAAC,KAAa,EAAE,SAAS,GAAG,CAAC;QAC7C,OAAO,IAAI,UAAU,CAAC,uDAAM,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAChG,CAAC;IACM,YAAY,CAAC,KAAa,EAAE,SAAS,GAAG,CAAC;QAC9C,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,uDAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;IAChG,CAAC;CACF;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAkC;AAE3B,MAAM,KAAK;IAChB,YAAmB,QAAkB,EAAE,EAAS,cAAuB,EAAE;QAAtD,UAAK,GAAL,KAAK,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAc;IAAI,CAAC;IAEvE,MAAM;QACX,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAI,MAAM,GAAW,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;gBACpC,MAAM,GAAG,IAAI,8CAAM,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACjD;iBAAM;gBACL,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACxB,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aACxB;SACF;QACD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC5C,CAAC;CACF;;;;;;;;;;;;;AClBD;AAAA;AAAO,MAAM,KAAK;IAChB,YAAmB,CAAS,EAAS,CAAS,EAAS,CAAS;QAA7C,MAAC,GAAD,CAAC,CAAQ;QAAS,MAAC,GAAD,CAAC,CAAQ;QAAS,MAAC,GAAD,CAAC,CAAQ;IAAI,CAAC;IAE9D,MAAM,CAAC,KAAY;QACxB,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC;IAEM,MAAM,CAAC,OAAiB;QAC7B,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE;YACnE,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAEnD,MAAM,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;YAC5G,IAAI,SAAS;gBAAE,MAAM,GAAG,CAAC,MAAM,CAAC;SACjC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;;;;;;;;;;;;;AClBD;AAAA;AAAO,MAAM,MAAM;IACjB,YAAmB,KAAY,EAAS,GAAU;QAA/B,UAAK,GAAL,KAAK,CAAO;QAAS,QAAG,GAAH,GAAG,CAAO;IAAI,CAAC;IAEvD,IAAW,QAAQ;QACjB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,IAAW,IAAI;QACb,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IAEM,UAAU,CAAC,KAAe;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC1E,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,WAAW,CAAC,CAAQ;QACzB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACpH,OAAO,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAEM,WAAW,CAAC,MAAc;QAC/B,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAEM,MAAM,CAAC,MAAc;QAC1B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1E,CAAC;IAEM,MAAM,CAAC,qCAAqC,CAAC,OAAiB,EAAE,MAAc;QACnF,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE;YAClB,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;SAC9B;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtB;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAmD;AAGF;AAE1C,MAAM,SAAS;IACpB,YAA0B,QAAgB,EAAS,KAAa,EAAS,IAAY,EAAS,UAAsB,EAAS,KAAY;QAA/G,aAAQ,GAAR,QAAQ,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAY;QAAS,UAAK,GAAL,KAAK,CAAO;IAAI,CAAC;IAE9I,IAAW,KAAK;QACd,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YACxB,OAAO,+DAAU,CAAC,SAAS,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YAC/B,OAAO,+DAAU,CAAC,YAAY,CAAC;SAChC;aAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;YACjC,OAAO,+DAAU,CAAC,SAAS,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YAC/B,OAAO,+DAAU,CAAC,KAAK,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YAC/B,OAAO,+DAAU,CAAC,KAAK,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YAC/B,OAAO,+DAAU,CAAC,KAAK,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YAC/B,OAAO,+DAAU,CAAC,KAAK,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YAC/B,OAAO,+DAAU,CAAC,MAAM,CAAC;SAC1B;aAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YAC/B,OAAO,+DAAU,CAAC,QAAQ,CAAC;SAC5B;aAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE;YAC/B,OAAO,+DAAU,CAAC,IAAI,CAAC;SACxB;IACH,CAAC;IAAA,CAAC;IAEF,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC;IAChC,CAAC;IAED,IAAW,IAAI;QACb,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,+DAAU,CAAC,KAAK,CAAC;IAC/D,CAAC;IAED,IAAW,GAAG;QACZ,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,IAAW,YAAY;QACrB,OAAO,CAAC,6DAAS,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,IAAW,aAAa;QACtB,OAAO,CAAC,6DAAS,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IACrE,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAa;QAClC,MAAM,GAAG,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACxC,IAAI,CAAC,KAAK,IAAI,EAAE;gBACd,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb;QACH,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,MAAM,CAAC,SAAS,CAAC,MAAqB,EAAE,IAAe,EAAE,KAAa,EAAE,MAAc;QAC3F,MAAM,SAAS,GAAG,6DAAS,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACvE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,MAAmB,EAAE,KAAY,EAAE,KAAa,EAAE,MAAc;QACvF,MAAM,QAAQ,GAAG,CAAC,CAAC;QACnB,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAY,EAAE,EAAE;YACpC,MAAM,SAAS,GAAG,6DAAS,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YACpE,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,QAAQ,IAAI,SAAS,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC;gBAC7E,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,QAAQ,IAAI,SAAS,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC;gBACxE,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,QAAQ,IAAI,SAAS,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;AC5ED;AAAA;AAAA;AAAmD;AAE5C,MAAM,UAAU;IAWd,MAAM,CAAC,GAAG,CAAC,IAAgB;QAChC,QAAQ,IAAI,EAAE;YACZ,KAAK,+DAAU,CAAC,SAAS;gBACvB,OAAO,IAAI,CAAC,SAAS,CAAC;YACxB,KAAK,+DAAU,CAAC,YAAY;gBAC1B,OAAO,IAAI,CAAC,YAAY,CAAC;YAC3B,KAAK,+DAAU,CAAC,KAAK;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;YACpB,KAAK,+DAAU,CAAC,MAAM;gBACpB,OAAO,IAAI,CAAC,MAAM,CAAC;YACrB,KAAK,+DAAU,CAAC,KAAK;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;YACpB,KAAK,+DAAU,CAAC,KAAK;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;YACpB,KAAK,+DAAU,CAAC,QAAQ;gBACtB,OAAO,IAAI,CAAC,QAAQ,CAAC;YACvB,KAAK,+DAAU,CAAC,IAAI;gBAClB,OAAO,IAAI,CAAC,IAAI,CAAC;YACnB,QAAQ;YACR,KAAK,+DAAU,CAAC,KAAK;gBACnB,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;IACH,CAAC;;AAhCM,uBAAY,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAClC,oBAAS,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAChC,gBAAK,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAC3B,gBAAK,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAC3B,iBAAM,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC1B,gBAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,gBAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,mBAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAChC,eAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;;;;;;;;;;;;ACXrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACV;AAElC,MAAM,SAAS;IACb,MAAM,CAAC,OAAO,CAAC,KAAY;QAChC,OAAO,IAAI,+DAAU,CACnB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnF,CAAC;IACM,MAAM,CAAC,SAAS,CAAC,UAAsB;QAC5C,OAAO,IAAI,qDAAK,CACd,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAC5H,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAC5H,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IACM,MAAM,CAAC,SAAS,CAAC,KAAa;QACnC,OAAO,KAAK,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IACM,MAAM,CAAC,SAAS,CAAC,KAAa;QACnC,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;IACjC,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,UAAsB,EAAE,KAAa,EAAE,MAAc;QAC5E,OAAO,IAAI,qDAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,CAAC,GAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAC,GAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrI,CAAC;IAEM,MAAM,CAAC,YAAY,CAAC,KAAY,EAAE,KAAa,EAAE,MAAc;QACpE,OAAO,IAAI,+DAAU,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC1F,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,KAAY,EAAE,KAAa;QAClD,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IACvC,CAAC;CACF;AAEM,MAAM,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;AAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;;;;;;;;;;;;;ACrChC;AAAA;AAAA;AAAyC;AAElC,MAAM,MAAM;IACV,MAAM,CAAC,aAAa,CAAC,GAAW,EAAE,SAAS,GAAG,CAAC;QACpD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,GAAG,GAAG,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IAC3E,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAS;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEM,MAAM,CAAC,SAAS,CAAC,CAAQ,EAAE,CAAQ;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;IAEM,MAAM,CAAC,aAAa,CAAC,CAAS;QACnC,IAAI,CAAC,CAAC;QACN,OAAO,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAE,GAAG,EAAC,EAAC,GAAC,CAAC,EAAC,EAAC,GAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,uBAAuB,EAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAE,CAAC,EAAC,EAAC,EAAC,EAAC,CAAC;IAClH,CAAC;IAEM,MAAM,CAAC,iBAAiB,CAAC,KAAY,EAAE,KAAa,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC;QAC/E,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IAEM,MAAM,CAAC,iBAAiB,CAAC,GAAW,EAAE,KAAa,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC;QAC9E,OAAO,IAAI,qDAAK,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,EAAE,SAAyC,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC;QACtI,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,SAAS,EAAE;YAC9C,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,SAAS,EAAE;gBAC7C,IAAI,MAAM,KAAK,IAAI;oBAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACnC;SACF;QACD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,qBAAsB,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAG,IAAI,KAAK,IAAI,MAAM,IAAK,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAG,IAAI,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,iBAAiB,KAAK,EAAE,CAAC,CAAC;IAC/O,CAAC;CACF;;;;;;;;;;;;;ACrCD;AAAA;AAAO,MAAM,MAAM;IACT,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAC3B,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EACvB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAC1B,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EACpB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAChB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAClD,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAErD,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACrE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EACxC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EACrC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EACzD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EACtC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAChD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IACO,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9D,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAC/B,MAAM,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;QACpB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACrB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC;IAAA,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,GAAG,GAAG,EAAE,OAAO,GAAG,CAAC;QAC/D,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;YAChC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC;YACjF,QAAQ,IAAI,SAAS,CAAC;YACtB,SAAS,IAAI,WAAW,CAAC;YACzB,SAAS,IAAI,CAAC,CAAC;SAChB;QACD,OAAO,KAAK,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAgBM,MAAM,KAAK,OAAO;QACvB,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,KAAY,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,WAAW,GAAG,GAAG,EAAE,OAAO,GAAG,CAAC;QAC7E,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAC,MAAM,EAAE,KAAK,CAAC,CAAC,GAAC,MAAM,EAAE,KAAK,CAAC,CAAC,GAAC,MAAM,EAAE,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;IAC/F,CAAC;;AAxBsB,eAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAC1D,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACjG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE;IAC/F,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;IAC9F,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAC/F,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IAC7F,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;IAChG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;IAC3F,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;IAC5F,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;IAC7F,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG;IAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;;;;;;;;;;;;AC5DhG;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,OAAO,CAAC;KACjB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,sEACW;;6FDME,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AAC+B;;AAcvE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,oEAAgB;SACjB;mIAIU,SAAS,mBAVlB,2DAAY;QACZ,0FAAgB,aAGhB,uEAAa;QACb,oEAAgB;6FAKP,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,0FAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { WorldGenerator } from 'src/_generator/world.generator';\r\nimport { BiomeColor } from 'src/_utils/biome.color';\r\nimport { Point } from 'src/_model/point';\r\nimport * as d3 from 'd3';\r\nimport { WorldInfo } from 'src/_model/world.info';\r\nimport { Conversor } from 'src/_utils/conversor';\r\nimport { Vector } from 'src/_model/vector';\r\n\r\ninterface Datum {\r\n  id: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'map-tool',\r\n  templateUrl: './map-tool.component.html',\r\n  styleUrls: ['./map-tool.component.scss']\r\n})\r\nexport class MapToolComponent implements AfterViewInit {\r\n  world: WorldGenerator = new WorldGenerator();\r\n  @ViewChild('canvas', { static: false }) canvas: ElementRef;\r\n  @ViewChild('svg', { static: false }) svg: ElementRef;\r\n  public context: CanvasRenderingContext2D;\r\n\r\n  public sessionKey = 'points';\r\n\r\n  position = new Point(0, 0, 0);\r\n  zoom = 1;\r\n\r\n  step = 20;\r\n  jump = 1.25;\r\n\r\n  stepPoints = 0.2;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // public get Points(): Promise<WorldInfo[]> {\r\n  //   return new Promise<WorldInfo[]>((resolve) => {\r\n  //     if (sessionStorage.getItem(this.sessionKey) === null) {\r\n  //       this.world.GetAllPoints(this.stepPoints).then((p) => {\r\n  //         sessionStorage.setItem(this.sessionKey, JSON.stringify(p));\r\n  //         console.log('new points', p.length);\r\n  //         resolve(p);\r\n  //       });\r\n  //     } else {\r\n  //       resolve(JSON.parse(sessionStorage.getItem(this.sessionKey)));\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // public set Points(points: Promise<WorldInfo[]>) {\r\n  //   points.then((p) => {\r\n  //     sessionStorage.setItem(this.sessionKey, JSON.stringify(p));\r\n  //   });\r\n  // }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    //this.change();\r\n\r\n    //this.drawMercator();\r\n    // this.drawMercatorAlt().then(d => {\r\n    //   console.log('done', d);\r\n    // });\r\n    //this.drawGlobe();\r\n\r\n    this.drawSvgMercator();\r\n\r\n    console.log('done');\r\n  }\r\n\r\n  public toggle = true;\r\n  public change() {\r\n    // if (this.toggle) {\r\n    //   this.drawMercator();\r\n    // } else {\r\n    //   this.drawMercatorAlt().then(d => {\r\n    //     console.log('done', d);\r\n    //   });\r\n    // }\r\n    // this.toggle = !this.toggle;\r\n  }\r\n\r\n  private drawSvgMercator() {\r\n\r\n    this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n    const projection = d3.geoOrthographic();\r\n    const svg = d3.select(this.svg.nativeElement);\r\n\r\n    const width = document.body.clientWidth - 40;\r\n    const height = (document.body.clientHeight - 40);\r\n\r\n    this.canvas.nativeElement.width = width;\r\n    this.canvas.nativeElement.height = height;\r\n\r\n    svg.attr('width', width).attr('height', height);\r\n\r\n    const image = this.context.createImageData(width, height);\r\n\r\n    this.renderSvgMercator(width, height).then(data => {\r\n      this.context.clearRect(0, 0, width, height);\r\n      for (let i = 0; i < data.image.byteLength; i++) {\r\n        image.data[i] = data.image[i];\r\n      }\r\n      this.context.putImageData(image, 0, 0);\r\n\r\n      this.world.getVectors(width, height).then((layers) => {\r\n        layers.forEach(layer => {\r\n          const element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n          let path = `M ${layer.limit[0].start.X} ${layer.limit[0].start.Y} `;\r\n          layer.limit.forEach(vector => {\r\n            path += `L ${vector.end.X} ${vector.end.Y} `;\r\n          });\r\n          path += 'Z';\r\n          element.setAttribute('d', path);\r\n          element.style.stroke = '#000';\r\n          element.style.fillOpacity = '.5';\r\n          element.style.strokeWidth = '1px';\r\n\r\n          this.svg.nativeElement.appendChild(element);\r\n        });\r\n\r\n        // const svg = d3.select(this.svg.nativeElement);\r\n        // svg.attr('width', width).attr('height', height);\r\n        // svg.selectAll(\"polygon\").data(layers).enter().append(\"polygon\").attr(\"points\", (d) => {\r\n        //   return d.map(function (d) {\r\n        //     return [d.start.X, d.start.Y].join(\",\");\r\n        //   }).join(\" \");\r\n        // });\r\n      });\r\n    });\r\n\r\n    // const svg = d3.select(this.svg.nativeElement);\r\n    // const x = (long: number) => (long + 180)/(360 / width);\r\n    // const y = (lat: number) => (lat + 90)/(180 / height);\r\n\r\n    // svg.attr('width', width).attr('height', height);\r\n\r\n    // const points: WorldInfo[][] = this.world.GetShorlines();\r\n    // console.log(`points len ${points.length}`);\r\n\r\n    // svg.selectAll(\"polygon\").data(points).enter().append(\"polygon\").attr(\"points\", (d) => {\r\n    //   return d.map(function (d) {\r\n    //     const point = Conversor.ToMercator(d.coordinate, width, height);\r\n    //     return [point.X, point.Y].join(\",\");\r\n    //   }).join(\" \");\r\n    // });\r\n\r\n  }\r\n\r\n  // private drawGlobe() {\r\n  //   this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n  //   const projection = d3.geoOrthographic();\r\n\r\n  //   const width = document.body.clientWidth - 40;\r\n  //   const height = document.body.clientHeight - 40;\r\n\r\n  //   this.canvas.nativeElement.width = width;\r\n  //   this.canvas.nativeElement.height = height;\r\n\r\n  //   const mercator = this.renderMercator(this.context.createImageData(width, height));\r\n\r\n  //   const globe = this.context.createImageData(width, height);\r\n  //   this.renderGlobe(globe, mercator.data, projection);\r\n  //   this.context.clearRect(0, 0, width, height);\r\n  //   this.context.putImageData(globe, 0, 0);\r\n\r\n  //   document.onmousemove = (event) => {\r\n  //     var p = [event.clientX, event.clientY];\r\n  //     const λM = d3.scaleLinear().domain([0, width]).range([-180, 180]);\r\n  //     const φM = d3.scaleLinear().domain([0, height]).range([90, -90]);\r\n\r\n  //     projection.rotate([λM(p[0]), φM(p[1])]);\r\n\r\n  //     this.renderGlobe(globe, mercator.data, projection);\r\n\r\n  //     this.context.clearRect(0, 0, width, height);\r\n  //     this.context.putImageData(globe, 0, 0);\r\n  //   };\r\n  // }\r\n\r\n  private drawMercator() {\r\n    this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n    const projection = d3.geoOrthographic();\r\n\r\n    const width = document.body.clientWidth - 40;\r\n    const height = document.body.clientHeight - 40;\r\n\r\n    this.canvas.nativeElement.width = width;\r\n    this.canvas.nativeElement.height = height;\r\n\r\n    const mercator = this.renderMercator(this.context.createImageData(width, height));\r\n\r\n    this.context.clearRect(0, 0, width, height);\r\n    this.context.putImageData(mercator, 0, 0);\r\n  }\r\n\r\n  private renderMercator(image: ImageData, onlyShoreline = false) {\r\n    const data = image.data;\r\n    const width = image.width;\r\n    const height = image.height;\r\n    let all = 0;\r\n    let tree = 0;\r\n    let ore = 0;\r\n    let c = 0;\r\n\r\n    for (var x = 0; x < width; x++) {\r\n      for (var y = 0; y < height; y++) {\r\n        let info = this.world.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), this.zoom);\r\n        let color = BiomeColor.Get(info.Biome);\r\n\r\n        if (onlyShoreline) {\r\n          if (info.Shoreline) {\r\n            color = [0, 0, 0, 255];\r\n            c++;\r\n          } else {\r\n            color = [255, 255, 255, 255];\r\n          }\r\n        }\r\n\r\n        let cell = (x + y * width) * 4;\r\n\r\n        data[cell] = color[0];\r\n        data[cell + 1] = color[1];\r\n        data[cell + 2] = color[2];\r\n        data[cell + 3] = color[3];\r\n\r\n        all++;\r\n      }\r\n    }\r\n    console.log(`info all:${all} tree:${tree} ore:${ore} ${width}x${height} ${c}`);\r\n\r\n    return image;\r\n  }\r\n\r\n  private renderMercator2(width: number, height: number) {\r\n    let all = 0;\r\n\r\n    const data: Uint8ClampedArray = new Uint8ClampedArray(width * height * 4);\r\n\r\n    for (var x = 0; x < width; x++) {\r\n      for (var y = 0; y < height; y++) {\r\n        let info = this.world.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), this.zoom);\r\n        let color = BiomeColor.Get(info.Biome);\r\n\r\n        let cell = (x + y * width) * 4;\r\n\r\n        data[cell] = color[0];\r\n        data[cell + 1] = color[1];\r\n        data[cell + 2] = color[2];\r\n        data[cell + 3] = color[3];\r\n\r\n        all++;\r\n      }\r\n    }\r\n    console.log(`alt info all:${all} ${width}x${height}`);\r\n\r\n    return data;\r\n  }\r\n\r\n  // private async drawMercatorAlt() {\r\n  //   this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n  //   const projection = d3.geoOrthographic();\r\n\r\n  //   const width = document.body.clientWidth - 40;\r\n  //   const height = document.body.clientHeight - 40;\r\n\r\n  //   this.canvas.nativeElement.width = width;\r\n  //   this.canvas.nativeElement.height = height;\r\n\r\n  //   const mercator = await this.renderMercatorAlt(this.context.createImageData(width, height));\r\n\r\n  //   this.context.clearRect(0, 0, width, height);\r\n  //   this.context.putImageData(mercator, 0, 0);\r\n  // }\r\n\r\n  // private renderMercatorAlt(image: ImageData): Promise<ImageData> {\r\n  //   return new Promise<ImageData>((resolve) => {\r\n  //     const data = image.data;\r\n  //     const width = image.width;\r\n  //     const height = image.height;\r\n  //     let all = 0;\r\n  //     let tree = 0;\r\n  //     let ore = 0;\r\n\r\n  //     const stepX = width * this.stepPoints / 360;\r\n  //     const stepY = height * this.stepPoints / 180;\r\n\r\n  //     const sizeX = stepX * (360 / this.stepPoints);\r\n  //     const sizeY = stepY * (180 / this.stepPoints);\r\n\r\n  //     this.world.GetAllPoints(this.stepPoints).then((points) => {\r\n  //       console.log('length', points.length, width, height, width*height, `x ${sizeX} ${stepX} ${360 / this.stepPoints}`, `y ${sizeY} ${stepY} ${180 / this.stepPoints}`);\r\n\r\n  //       for (var x = 0; x < width; x++) {\r\n  //         for (var y = 0; y < height; y++) {\r\n  //           let idx = Helper.IdxMatrixToVector(new Point(x, y, 0), width, stepX, stepY);\r\n\r\n  //           let info = points[idx];\r\n\r\n  //           // if (x % 100 === 0)\r\n  //           //   console.log('trouble2', x, y, idx, info);\r\n\r\n  //           let color = BiomeColor.Get(info.Biome);\r\n\r\n  //           // if (info.Biome === WorldBiome.beach) {\r\n  //           //   color = [0, 0, 0, 255];\r\n  //           // } else {\r\n  //           //   color = [255, 255, 255, 255];\r\n  //           // }\r\n\r\n  //           let cell = (x + y * image.width) * 4;\r\n\r\n  //           data[cell] = color[0];\r\n  //           data[cell + 1] = color[1];\r\n  //           data[cell + 2] = color[2];\r\n  //           data[cell + 3] = color[3];\r\n\r\n  //           all++;\r\n  //         }\r\n  //       }\r\n\r\n  //       console.log(`info all:${all} tree:${tree} ore:${ore} ${width}x${height}`);\r\n  //       resolve(image);\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  private renderSvgMercator(width: number, height: number, onlyShoreline = false) {\r\n    return new Promise<{ world: WorldInfo[], image: Uint8ClampedArray }>((resolve) => {\r\n      let all = 0;\r\n      let tree = 0;\r\n      let ore = 0;\r\n      let c = 0;\r\n      const array: Uint8ClampedArray = new Uint8ClampedArray(width * height * 4);\r\n\r\n      this.world.GetAllMercatorPoints(width, height, (info) => {\r\n        let color = BiomeColor.Get(info.Biome);\r\n\r\n        if (onlyShoreline) {\r\n          if (info.Shoreline) {\r\n            color = [0, 0, 0, 255];\r\n            c++;\r\n          } else {\r\n            color = [255, 255, 255, 255];\r\n          }\r\n        }\r\n\r\n        let mercatorPoint = Conversor.ToMercator(info.coordinate, width, height);\r\n        let cell = Conversor.ToIdxWidth(mercatorPoint, width) * 4;\r\n\r\n        array[cell] = color[0];\r\n        array[cell + 1] = color[1];\r\n        array[cell + 2] = color[2];\r\n        array[cell + 3] = color[3];\r\n\r\n        all++;\r\n\r\n      }).then((points) => {\r\n        console.log(`info svg all:${all} tree:${tree} ore:${ore} ${width}x${height} ${c}`);\r\n        resolve({ world: points, image: array });\r\n      });\r\n    });\r\n  }\r\n\r\n  // private renderGlobe(image: ImageData, mercatorData: Uint8ClampedArray, projection = d3.geoOrthographic()) {\r\n  //   const width = image.width;\r\n  //   const height = image.height;\r\n  //   const data = image.data;\r\n\r\n  //   for (var y = 0, i = -1; y < height; ++y) {\r\n  //     for (var x = 0; x < width; ++x) {\r\n  //       var p = projection.invert([x, y]), λ = p[0], φ = p[1];\r\n  //       if (λ > 180 || λ < -180 || φ > 90 || φ < -90) {\r\n  //         i += 4;\r\n  //         continue;\r\n  //       }\r\n  //       var q = ((90 - φ) / 180 * height | 0) * width + ((180 + λ) / 360 * width | 0) << 2;\r\n  //       data[++i] = mercatorData[q];\r\n  //       data[++i] = mercatorData[++q];\r\n  //       data[++i] = mercatorData[++q];\r\n  //       data[++i] = 255;\r\n  //     }\r\n  //   }\r\n\r\n  //   return image;\r\n  // }\r\n\r\n  // private getShorelines(width: number, height: number): WorldInfo[][] {\r\n  //   const points: WorldInfo[][] = [];\r\n\r\n  //   for (var x = 0; x < width; x++) {\r\n  //     for (var y = 0; y < height; y++) {\r\n  //       let info = this.world.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), this.zoom);\r\n  //       if (info.Shoreline) {\r\n  //         if (points[x] === undefined) points[x] = [];\r\n  //         points[x][y] = info;\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   const all = WorldInfo.AllInOne(points);\r\n\r\n  //   const polygonPoints: WorldInfo[][] = [];\r\n\r\n  //   // while (points.length > 0) {\r\n  //   const polygon: WorldInfo[] = [];\r\n  //   let current: WorldInfo = null;\r\n\r\n  //   const first: WorldInfo = all[0];\r\n\r\n  //   console.log('first', first);\r\n  //   WorldInfo.RemoveOne(points, first, width, height);\r\n  //   polygon.push(first);\r\n\r\n  //   while (first !== current) {\r\n  //     const actualPoint = Conversor.ToMercator((current ?? first).coordinate, width, height);\r\n  //     const allnear = WorldInfo.GetAllNear(all, actualPoint, width, height);\r\n  //     console.log('all near', allnear);\r\n\r\n  //     // const nearNewPoints = allnear.filter((n: WorldInfo) => polygon.includes((p: WorldInfo) => (p.coordinate.longitude === n.coordinate.longitude && p.coordinate.latitude === n.coordinate.latitude)));\r\n\r\n  //     const nearNewPoints = [];\r\n  //     allnear.forEach((n) => {\r\n  //       let exists = false;\r\n  //       polygon.forEach((p) => {\r\n  //         if (p.coordinate.longitude === n.coordinate.longitude && p.coordinate.latitude === n.coordinate.latitude) {\r\n  //           exists = true;\r\n  //           return;\r\n  //         }\r\n  //       });\r\n  //       if (!exists) {\r\n  //         nearNewPoints.push(n);\r\n  //       }\r\n  //     });\r\n\r\n\r\n  //     const nearNewPoint = nearNewPoints.sort((a: WorldInfo, b: WorldInfo) => {\r\n  //       return (Helper.Pitagoras(Conversor.ToMercator(a.coordinate, width, height), actualPoint) <= Helper.Pitagoras(Conversor.ToMercator(b.coordinate, width, height), actualPoint)) ? 1 : -1;\r\n  //     })[0];\r\n\r\n  //     console.log('near', nearNewPoints, nearNewPoint);\r\n  //     WorldInfo.RemoveOne(points, nearNewPoint, width, height);\r\n  //     polygon.push(nearNewPoint);\r\n  //     current = nearNewPoint;\r\n\r\n  //   }\r\n  //   console.log('polygon', polygon);\r\n  //   polygonPoints.push(polygon);\r\n  //   // }\r\n\r\n  //   return polygonPoints;\r\n  // }\r\n}","<div class='centerbox'>\r\n  <canvas #canvas (click)=\"change()\"></canvas>\r\n  <svg #svg></svg>\r\n</div>","export enum WorldBiome {\r\n  deepWater,\r\n  swallowWater,\r\n  shoreline,\r\n  beach,\r\n  sandy,\r\n  grass,\r\n  woods,\r\n  forest,\r\n  mountain,\r\n  snow\r\n}","import { WorldInfo } from 'src/_model/world.info';\r\nimport { Point } from 'src/_model/point';\r\nimport { Perlin } from '../_utils/perlin.noise';\r\nimport { Coordinate } from 'src/_model/coordinate';\r\nimport { Conversor } from 'src/_utils/conversor';\r\nimport { WorldBiome } from 'src/_enum/world.biome';\r\nimport { Helper } from 'src/_utils/helper';\r\nimport { Vector } from 'src/_model/vector';\r\nimport { Layer } from 'src/_model/layer';\r\n\r\nexport class WorldGenerator {\r\n  private noise = { raw: [], topology: [], trees: [], ores: [] };\r\n  constructor(public seed = 8, useDefault = true, public radius = 5000) {\r\n    this.prepareSeed(seed);\r\n    this.noise.raw = useDefault ? Perlin.DefaultP : Perlin.RandomP;\r\n    this.noise.topology = this.generateNoise(this.noise.raw, seed);\r\n    this.noise.trees = this.generateNoise(this.generateNewNoise(), seed);\r\n    this.noise.ores = this.generateNoise(this.generateNewNoise(2), seed);\r\n  }\r\n\r\n  private prepareSeed(seed) {\r\n    if (seed > 0 && seed < 1) {\r\n      seed *= 65536;\r\n    }\r\n    seed = Math.floor(seed);\r\n    if (seed < 256) {\r\n      seed |= seed << 8;\r\n    }\r\n  }\r\n\r\n  private generateNoise(array, seed) {\r\n    const data = [];\r\n    for (let i = 0; i < 256; i++) {\r\n      if (i & 1) {\r\n        data[i] = data[i + 256] = array[i] ^ (seed & 255);\r\n      }\r\n      else {\r\n        data[i] = data[i + 256] = array[i] ^ ((seed >> 8) & 255);\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private generateNewNoise(jump = 1) {\r\n    const data: [] = JSON.parse(JSON.stringify(this.noise.raw));\r\n    const noise = [];\r\n    while (data.length > 0) {\r\n      if (data.length <= jump)\r\n        noise.push(data.pop());\r\n      else\r\n        noise.push(data.splice(jump, 1));\r\n    }\r\n    return noise;\r\n  }\r\n\r\n  private cicle_gradient(a, b, x, y, r) {\r\n    var dist_points = (a - x) * (a - x) + (b - y) * (b - y);\r\n    r *= r;\r\n    return dist_points < r ? (((dist_points * 100 / r) - 100) * -1) / 100 : 0;\r\n  }\r\n\r\n  public GetInformation(coordinate: Coordinate, zoom = 1, onlyTopology: boolean = false) {\r\n    if (!(coordinate.radius != null)) {\r\n      coordinate.radius = zoom;\r\n    }\r\n    var point = Conversor.ToCardian(coordinate);\r\n    const factor = zoom;//this.radius * zoom;\r\n    const topology = Math.trunc((Perlin.Noise(point, factor, this.noise.topology, 0.68) + 0.5) * 100) / 100;\r\n    let trees = null;\r\n    let ores = null;\r\n    if (!onlyTopology) {\r\n      trees = Math.trunc((Perlin.Noise(point, factor * 100, this.noise.trees, 0.68) + 0.5) * 100) / 100;\r\n      ores = Math.trunc((Perlin.Noise(point, factor * 100, this.noise.ores, 0.68) + 0.5) * 100) / 100;\r\n    }\r\n    return new WorldInfo(topology, trees, ores, coordinate, point);\r\n  }\r\n\r\n  public GetAllMercatorPoints(width: number, height: number, inspector: (a: WorldInfo)=> void = null): Promise<WorldInfo[]> {\r\n    return new Promise<WorldInfo[]>((resolve) => {\r\n      const ini = new Date();\r\n      let count = 0;\r\n      let countLand = 0;\r\n      const ret: WorldInfo[] = [];\r\n      for (let x = 0; x < width; x++) {\r\n        for (let y = 0; y < height; y++) {\r\n          const info = this.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), 1);\r\n          if (info.topology >= 0.5) countLand++;\r\n          if (inspector !== null) {\r\n            inspector(info);\r\n          }\r\n          ret.push(info);\r\n          count++;\r\n        }\r\n      }\r\n      const end = new Date();\r\n      console.log(`duration ${Helper.TruncDecimals(end.getTime() / 1000 - ini.getTime() / 1000, 3)}s with count: ${count} ${countLand}`);\r\n      resolve(ret);\r\n    });\r\n  }\r\n\r\n  public GetAllPoints(step = 0.0001): Promise<WorldInfo[]> {\r\n    return new Promise<WorldInfo[]>((resolve) => {\r\n      const ini = new Date();\r\n      let count = 0;\r\n      const decPl = Helper.DecimalPlaces(step);\r\n      console.log('decimal', decPl, step);\r\n      const ret: WorldInfo[] = [];\r\n      for (let longitude = -90; longitude <= 90; longitude += step) {\r\n        for (let latitude = -180; latitude <= 180; latitude += step) {\r\n          ret.push(this.GetInformation(new Coordinate(Helper.TruncDecimals(longitude, decPl), Helper.TruncDecimals(latitude, decPl)), 1, true));\r\n          count++;\r\n        }\r\n      }\r\n      const end = new Date();\r\n      console.log(`duration ${Helper.TruncDecimals(end.getTime() / 1000 - ini.getTime() / 1000, 3)}s with count: ${count}`);\r\n      resolve(ret);\r\n    });\r\n  }\r\n\r\n  public getVectors(width: number, height: number): Promise<Layer[]> {\r\n    return new Promise<Layer[]>(resolve => {\r\n      console.log(`[getVectors] start ${width}x${height}`, new Date());\r\n      const allVectors: Vector[] = [];\r\n      let count = 0;\r\n      for (var x = 0; x < width - 1; x++) {\r\n        for (var y = 0; y < height - 1; y++) {\r\n          const no = new Point(x, y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(no, width, height), 1).topology < 0.5) continue;\r\n          const ne = new Point((1 + x), y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(ne, width, height), 1).topology < 0.5) continue;\r\n          const so = new Point(x, (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(so, width, height), 1).topology < 0.5) continue;\r\n          const se = new Point((1 + x), (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(se, width, height), 1).topology < 0.5) continue;\r\n\r\n          Vector.AddInIfInvertNotExistsAndRemoveItFrom(allVectors, new Vector(no, ne));\r\n          Vector.AddInIfInvertNotExistsAndRemoveItFrom(allVectors, new Vector(ne, se));\r\n          Vector.AddInIfInvertNotExistsAndRemoveItFrom(allVectors, new Vector(se, so));\r\n          Vector.AddInIfInvertNotExistsAndRemoveItFrom(allVectors, new Vector(so, no));\r\n\r\n          count++;\r\n        }\r\n      }\r\n      console.log('condensedVectors', allVectors.length, new Date());\r\n      let copyCondensedVectors = [...allVectors];\r\n      const layers: Layer[] = [];\r\n      while (copyCondensedVectors.length > 0) {\r\n        const vectors: Vector[] = [];\r\n        const startVector = copyCondensedVectors.pop();\r\n        vectors.push(startVector.copy);\r\n        let runner = startVector.copy;\r\n        while (!runner.end.equals(startVector.start)) {\r\n          const vectorIdx = copyCondensedVectors.findIndex((v) => runner.end.equals(v.start));\r\n          runner = copyCondensedVectors.splice(vectorIdx, 1)[0];\r\n          vectors.push(runner.copy);\r\n        }\r\n        layers.push(new Layer(vectors).shrunk());\r\n      }\r\n      console.log('layers', layers.length, new Date());\r\n      // const shrunkenLayers: Layer[] = [];\r\n      // layers.forEach((layer) => {\r\n      //   shrunkenLayers.push(layer.shrunk());\r\n      // });\r\n      // console.log('shrunkenLayeredPaths', shrunkenLayers.length, new Date());\r\n      resolve(layers);\r\n    });\r\n  }\r\n\r\n  public getSvg(width: number, height: number): Promise<Vector[][]> {\r\n    return new Promise<Vector[][]>(resolve => {\r\n      console.log('start', width, height, new Date());\r\n      const allVectors: Vector[] = [];\r\n      let count = 0;\r\n      for (var x = 0; x < width - 1; x++) {\r\n        for (var y = 0; y < height - 1; y++) {\r\n          const no = new Point(x, y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(no, width, height), 1).topology < 0.5) continue;\r\n          const ne = new Point((1 + x), y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(ne, width, height), 1).topology < 0.5) continue;\r\n          const so = new Point(x, (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(so, width, height), 1).topology < 0.5) continue;\r\n          const se = new Point((1 + x), (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(se, width, height), 1).topology < 0.5) continue;\r\n\r\n          allVectors.push(new Vector(no, ne));\r\n          allVectors.push(new Vector(ne, se));\r\n          allVectors.push(new Vector(se, so));\r\n          allVectors.push(new Vector(so, no));\r\n\r\n          count++;\r\n        }\r\n      }\r\n      console.log('allVectors', count, allVectors.length, new Date());\r\n      let copyAllVectors = [...allVectors];\r\n      const condensedVectors: Vector[] = [];\r\n      while (copyAllVectors.length > 0) {\r\n        const vector = copyAllVectors.pop();\r\n        if (!vector.inverted.containsIn(copyAllVectors)) {\r\n          condensedVectors.push(vector);\r\n        } else {\r\n          copyAllVectors = copyAllVectors.filter((v) => !v.equals(vector.inverted));\r\n        }\r\n      }\r\n      console.log('condensedVectors', condensedVectors.length, new Date());\r\n      let copyCondensedVectors = [...condensedVectors];\r\n      const layeredPaths: Vector[][] = [];\r\n      while (copyCondensedVectors.length > 0) {\r\n        const layer: Vector[] = [];\r\n        const startVector = copyCondensedVectors.pop();\r\n        layer.push(startVector.copy);\r\n        let runner = startVector.copy;\r\n        while (!runner.end.equals(startVector.start)) {\r\n          const vectorIdx = copyCondensedVectors.findIndex((v) => runner.end.equals(v.start));\r\n          runner = copyCondensedVectors.splice(vectorIdx, 1)[0];\r\n          layer.push(runner.copy);\r\n        }\r\n        layeredPaths.push(layer);\r\n      }\r\n      console.log('layeredPaths', layeredPaths.length, new Date());\r\n      const shrunkenLayeredPaths: Vector[][] = [];\r\n      layeredPaths.forEach((layer) => {\r\n        const shrunkenLayer: Vector[] = [];\r\n        let runner: Vector = layer[0].copy;\r\n        for (let i = 1; i < layer.length; i++) {\r\n          if (runner.isCollinear(layer[i].end)) {\r\n            runner = new Vector(runner.start, layer[i].end);\r\n          } else {\r\n            shrunkenLayer.push(runner.copy);\r\n            runner = layer[i].copy;\r\n          }\r\n        }\r\n        shrunkenLayer.push(runner.copy);\r\n        shrunkenLayeredPaths.push(shrunkenLayer);\r\n      });\r\n      console.log('shrunkenLayeredPaths', shrunkenLayeredPaths.length, new Date());\r\n      resolve(shrunkenLayeredPaths);\r\n    });\r\n  }\r\n\r\n  public GetShorlines(step = 0.0001): WorldInfo[][] {\r\n    const ret: WorldInfo[][] = [];\r\n    const coordinate = new Coordinate(0, 0);\r\n    const polygon: Coordinate[] = this.probePolygon(coordinate, step);\r\n    ret.push(polygon.map((p) => this.GetInformation(p)));\r\n    return ret;\r\n  }\r\n\r\n  private probePolygon(coordinate = new Coordinate(0, 0), step = 0.0001): Coordinate[] {\r\n    const polygon: Coordinate[] = [];\r\n    let points: Coordinate[] = [];\r\n    do {\r\n      coordinate = coordinate.addLongitude(step);\r\n      points = this.probeNearShorepoints(coordinate, step);\r\n    } while (points === [])\r\n\r\n    while (points.length !== 0) {\r\n      const newPoints = [];\r\n      points.forEach((point: Coordinate) => {\r\n        // const point = points[0];\r\n        polygon.push(point);\r\n        console.log('point', point, polygon.length);\r\n        newPoints.push(...this.probeNearShorepoints(point, step));\r\n      });\r\n      const beforeCount = newPoints.length;\r\n      points = newPoints.filter((newPoint: Coordinate) => polygon.find((p: Coordinate) => p.latitude === newPoint.latitude && p.longitude === newPoint.longitude) === undefined);\r\n      const afterCount = points.length;\r\n      if (afterCount === beforeCount) {\r\n        console.log('problema', afterCount, beforeCount);\r\n      } else if (afterCount > beforeCount) {\r\n        console.log('mais problema ainda', afterCount, beforeCount);\r\n      } else {\r\n        console.log('ok', afterCount, beforeCount);\r\n      }\r\n    }\r\n\r\n    console.log('finito', polygon);\r\n\r\n    return polygon;\r\n  }\r\n\r\n  private probeNearShorepoints(coordinate: Coordinate, step = 0.0001): Coordinate[] {\r\n    const points: Coordinate[] = [];\r\n    const east = coordinate.addLongitude(step);\r\n    const eastInfo = this.GetInformation(east, 1, true);\r\n    if (eastInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('east', east, eastInfo);\r\n      points.push(east);\r\n    }\r\n    const south = coordinate.addLatitude(step);\r\n    const southInfo = this.GetInformation(south, 1, true);\r\n    if (southInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('south', south, southInfo);\r\n      points.push(south);\r\n    }\r\n    const west = coordinate.addLongitude(-step);\r\n    const westInfo = this.GetInformation(west, 1, true);\r\n    if (westInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('west', west, westInfo);\r\n      points.push(west);\r\n    }\r\n    const north = coordinate.addLatitude(-step);\r\n    const northInfo = this.GetInformation(north, 1, true);\r\n    if (northInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('north', north, northInfo);\r\n      points.push(north);\r\n    }\r\n    return points;\r\n  }\r\n}","import { Helper } from 'src/_utils/helper';\r\n\r\nexport class Coordinate {\r\n  constructor(public latitude: number, public longitude: number, public radius?: number) { }\r\n\r\n  public addLatitude(value: number, precision = 4) {\r\n    return new Coordinate(Helper.TruncDecimals(this.latitude + value, precision), this.longitude);\r\n  }\r\n  public addLongitude(value: number, precision = 4) {\r\n    return new Coordinate(this.latitude, Helper.TruncDecimals(this.longitude + value, precision));\r\n  }\r\n}","import { Vector } from \"./vector\";\n\nexport class Layer {\n  constructor(public limit: Vector[] = [], public innerLayers: Layer[] = []) { }\n\n  public shrunk(): Layer {\n    const layer = [...this.limit];\n    const array = [];\n    let runner: Vector = layer[0].copy;\n    for (let i = 1; i < layer.length; i++) {\n      if (runner.isCollinear(layer[i].end)) {\n        runner = new Vector(runner.start, layer[i].end);\n      } else {\n        array.push(runner.copy);\n        runner = layer[i].copy;\n      }\n    }\n    array.push(runner.copy);\n    return new Layer(array, this.innerLayers);\n  }\n}","import { Vector } from \"./vector\";\r\n\r\nexport class Point {\r\n  constructor(public X: number, public Y: number, public Z: number) { }\r\n\r\n  public equals(point: Point): boolean {\r\n    return (this.X === point.X && this.Y === point.Y && this.Z === point.Z);\r\n  }\r\n\r\n  public inside(vectors: Vector[]) {\r\n    let inside = false;\r\n    for (let i = 0, j = vectors.length - 1; i < vectors.length; j = i++) {\r\n      const xi = vectors[i].start.X, yi = vectors[i].start.Y;\r\n      const xj = vectors[j].end.X, yj = vectors[j].end.Y;\r\n\r\n      const intersect = ((yi > this.Y) != (yj > this.Y)) && (this.X < (xj - xi) * (this.Y - yi) / (yj - yi) + xi);\r\n      if (intersect) inside = !inside;\r\n    }\r\n    return inside;\r\n  }\r\n}","import { Point } from \"./point\";\n\nexport class Vector {\n  constructor(public start: Point, public end: Point) { }\n\n  public get inverted(): Vector {\n    return new Vector(this.end, this.start);\n  }\n\n  public get copy(): Vector {\n    return new Vector(this.start, this.end);\n  }\n\n  public containsIn(array: Vector[]): boolean {\n    for (let i = 0; i < array.length; i++) {\n      if ((array[i].start.equals(this.start)) && (array[i].end.equals(this.end))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public isCollinear(a: Point): boolean {\n    const A = this.start.X * (this.end.Y - a.Y) + this.end.X * (a.Y - this.start.Y) + a.X * (this.start.Y - this.end.Y);\n    return A === 0;\n  }\n\n  public isClockwise(vector: Vector): boolean {\n    const dot = (this.end.X - this.start.X)*(vector.end.X - vector.start.X) + (this.end.Y - this.start.Y)*(vector.end.Y - vector.start.Y);\n    const det = (this.end.X - this.start.X)*(vector.end.Y - vector.start.Y) - (this.end.Y - this.start.Y)*(vector.end.X - vector.start.X);\n    return Math.atan2(det, dot) > 0;\n  }\n\n  public equals(vector: Vector): boolean {\n    return (this.start.equals(vector.start) && this.end.equals(vector.end));\n  }\n\n  public static AddInIfInvertNotExistsAndRemoveItFrom(vectors: Vector[], vector: Vector): Vector[] {\n    const vectorIdx = vectors.findIndex((v) => vector.inverted.equals(v));\n    if (vectorIdx > -1) {\n      vectors.splice(vectorIdx, 1);\n    } else {\n      vectors.push(vector);\n    }\n    return vectors;\n  }\n}","import { WorldBiome } from 'src/_enum/world.biome';\r\nimport { Point } from 'src/_model/point';\r\nimport { Coordinate } from 'src/_model/coordinate';\r\nimport { Conversor } from 'src/_utils/conversor';\r\n\r\nexport class WorldInfo {\r\n  public constructor(public topology: number, public trees: number, public ores: number, public coordinate: Coordinate, public point: Point) { }\r\n\r\n  public get Biome(): WorldBiome {\r\n    if (this.topology < 0.35) {\r\n      return WorldBiome.deepWater;\r\n    } else if (this.topology < 0.50) {\r\n      return WorldBiome.swallowWater;\r\n    } else if (this.topology === 0.50) {\r\n      return WorldBiome.shoreline;\r\n    } else if (this.topology < 0.53) {\r\n      return WorldBiome.beach;\r\n    } else if (this.topology < 0.56) {\r\n      return WorldBiome.sandy;\r\n    } else if (this.topology < 0.62) {\r\n      return WorldBiome.grass;\r\n    } else if (this.topology < 0.70) {\r\n      return WorldBiome.woods;\r\n    } else if (this.topology < 0.75) {\r\n      return WorldBiome.forest;\r\n    } else if (this.topology < 0.80) {\r\n      return WorldBiome.mountain;\r\n    } else if (this.topology < 0.90) {\r\n      return WorldBiome.snow;\r\n    }\r\n  };\r\n\r\n  public get Shoreline(): boolean {\r\n    return this.topology === 0.50;\r\n  }\r\n\r\n  public get Tree(): boolean {\r\n    return (this.trees < 0.20) && this.Biome == WorldBiome.grass;\r\n  }\r\n\r\n  public get Ore(): boolean {\r\n    return (this.ores < 0.25);\r\n  }\r\n\r\n  public get LatitudeLine(): boolean {\r\n    return (Conversor.ToDegrees(this.coordinate.latitude) % 10 === 0);\r\n  }\r\n\r\n  public get LongitudeLine(): boolean {\r\n    return (Conversor.ToDegrees(this.coordinate.longitude) % 10 === 0);\r\n  }\r\n\r\n  public static AllInOne(data: any[][]): any[] {\r\n    const ret = [];\r\n    data.forEach((inner) => inner.forEach(d => {\r\n      if (d !== null) {\r\n        ret.push(d);\r\n      }\r\n    }))\r\n    return ret;\r\n  }\r\n\r\n  public static RemoveOne(points: WorldInfo[][], item: WorldInfo, width: number, height: number): void {\r\n    const itemPoint = Conversor.ToMercator(item.coordinate, width, height);\r\n    points[itemPoint.X].splice(itemPoint.Y, 1);\r\n  }\r\n\r\n  public static GetAllNear(points: WorldInfo[], point: Point, width: number, height: number): WorldInfo[] {\r\n    const variator = 2;\r\n    return points.filter((p: WorldInfo) => {\r\n      const itemPoint = Conversor.ToMercator(p.coordinate, width, height);\r\n      return (itemPoint.X >= point.X - variator && itemPoint.X <= point.X + variator) &&\r\n        (itemPoint.Y >= point.Y - variator && itemPoint.Y <= point.Y + variator) &&\r\n        (itemPoint.Z >= point.Z - variator && itemPoint.Z <= point.Z + variator);\r\n    });\r\n  }\r\n}","import { WorldBiome } from 'src/_enum/world.biome';\r\n\r\nexport class BiomeColor {\r\n  static swallowWater = [0, 191, 255, 255];\r\n  static deepWater = [65, 105, 225, 255];\r\n  static grass = [50, 205, 50, 255];\r\n  static woods = [34, 139, 34, 255];\r\n  static forest = [0, 100, 0, 255];\r\n  static sandy = [210, 180, 140, 255];\r\n  static beach = [238, 214, 175, 255];\r\n  static mountain = [139, 137, 137, 255];\r\n  static snow = [255, 250, 250, 255];\r\n\r\n  public static Get(type: WorldBiome) {\r\n    switch (type) {\r\n      case WorldBiome.deepWater:\r\n        return this.deepWater;\r\n      case WorldBiome.swallowWater:\r\n        return this.swallowWater;\r\n      case WorldBiome.woods:\r\n        return this.woods;\r\n      case WorldBiome.forest:\r\n        return this.forest;\r\n      case WorldBiome.sandy:\r\n        return this.sandy;\r\n      case WorldBiome.beach:\r\n        return this.beach;\r\n      case WorldBiome.mountain:\r\n        return this.mountain;\r\n      case WorldBiome.snow:\r\n        return this.snow;\r\n      default:\r\n      case WorldBiome.grass:\r\n        return this.grass;\r\n    }\r\n  }\r\n}","import { Coordinate } from 'src/_model/coordinate';\r\nimport { Point } from 'src/_model/point';\r\n\r\nexport class Conversor {\r\n  public static ToPolar(point: Point): Coordinate {\r\n    return new Coordinate(\r\n      Math.atan(point.Y / point.Z),\r\n      Math.atan(Math.sqrt(Math.pow(point.X, 2) + Math.pow(point.Y, 2) / point.Z)),\r\n      Math.sqrt(Math.pow(point.X, 2) + Math.pow(point.Y, 2) + Math.pow(point.Z, 2)));\r\n  }\r\n  public static ToCardian(coordinate: Coordinate): Point {\r\n    return new Point(\r\n      coordinate.radius * Math.cos(Conversor.ToRadians(coordinate.longitude)) * Math.cos(Conversor.ToRadians(coordinate.latitude)),\r\n      coordinate.radius * Math.sin(Conversor.ToRadians(coordinate.longitude)) * Math.cos(Conversor.ToRadians(coordinate.latitude)),\r\n      coordinate.radius * Math.sin(Conversor.ToRadians(coordinate.latitude)));\r\n  }\r\n  public static ToDegrees(angle: number): number {\r\n    return angle * (180 / Math.PI);\r\n  }\r\n  public static ToRadians(angle: number): number {\r\n    return angle * (Math.PI / 180);\r\n  }\r\n\r\n  public static ToMercator(coordinate: Coordinate, width: number, height: number): Point {\r\n    return new Point(Math.round((coordinate.longitude + 180)/(360 / width)), Math.round((coordinate.latitude + 90)/(180 / height)), 0);\r\n  }\r\n\r\n  public static FromMercator(point: Point, width: number, height: number): Coordinate {\r\n    return new Coordinate((point.Y * (180 / height)) - 90, (point.X * (360 / width)) - 180);\r\n  }\r\n\r\n  public static ToIdxWidth(point: Point, width: number): number {\r\n    return (point.X + (point.Y) * width);\r\n  }\r\n}\r\n\r\nexport const RAD2DEG = 180 / Math.PI;\r\nexport const PI_4 = Math.PI / 4;","import { Point } from 'src/_model/point';\r\n\r\nexport class Helper {\r\n  public static TruncDecimals(num: number, precision = 4): number {\r\n    return Math.trunc(Math.pow(10, precision) * num)/Math.pow(10, precision);\r\n  }\r\n\r\n  public static CloneAny(data: any): any {\r\n    return JSON.parse(JSON.stringify(data));\r\n  }\r\n\r\n  public static Pitagoras(a: Point, b: Point): number {\r\n    return Math.sqrt(Math.pow(a.X - b.X, 2) + Math.pow(a.Y - b.Y, 2) + Math.pow(a.Z - b.Z, 2));\r\n  }\r\n\r\n  public static DecimalPlaces(n: number) {\r\n    let a;\r\n    return (a=(n.toString().charAt(0)=='-'?n-1:n+1).toString().replace(/^-?[0-9]+\\.?([0-9]+)$/,'$1').length)>=1?a:0;\r\n  }\r\n\r\n  public static IdxMatrixToVector(point: Point, width: number, stepX = 1, stepY = 1): number {\r\n    return Math.trunc((point.Y) * width + (point.X));\r\n  }\r\n\r\n  public static IdxVectorToMatrix(idx: number, width: number, stepX = 1, stepY = 1): Point {\r\n    return new Point((idx % width), (idx / width), 0);\r\n  }\r\n\r\n  public static Matrix(width = 200, height = 100, action: (x: number, y: number) => void = () => null, initx = 0, inity = 0, increment = 1) {\r\n    const ini = new Date();\r\n    let count = 0;\r\n    for (let y = inity; y < height; y += increment) {\r\n      for (let x = initx; x < width; y += increment) {\r\n        if (action !== null) action(x, y);\r\n      }\r\n    }\r\n    const end = new Date();\r\n    console.log(`duration [Matrix] ${ initx > 0 || inity > 0 ? `${initx}:${inity}` : '' } ${width}:${height} ${ increment > 1 ? increment : '' } ${Helper.TruncDecimals(end.getTime() / 1000 - ini.getTime() / 1000, 3)}s with count: ${count}`);\r\n  }\r\n}","import { Point } from 'src/_model/point';\r\n\r\nexport class Perlin {\r\n  private static perlin(x, y, z, p) {\r\n    const X = Math.floor(x) & 255,\r\n      Y = Math.floor(y) & 255,\r\n      Z = Math.floor(z) & 255;\r\n    x -= Math.floor(x);\r\n    y -= Math.floor(y);\r\n    z -= Math.floor(z);\r\n    const u = this.fade(x),\r\n      v = this.fade(y),\r\n      w = this.fade(z);\r\n    const A = p[X] + Y, AA = p[A] + Z, AB = p[A + 1] + Z,\r\n      B = p[X + 1] + Y, BA = p[B] + Z, BB = p[B + 1] + Z;\r\n\r\n    return this.lerp(w, this.lerp(v, this.lerp(u, this.grad(p[AA], x, y, z),\r\n      this.grad(p[BA], x - 1, y, z)),\r\n      this.lerp(u, this.grad(p[AB], x, y - 1, z),\r\n        this.grad(p[BB], x - 1, y - 1, z))),\r\n      this.lerp(v, this.lerp(u, this.grad(p[AA + 1], x, y, z - 1),\r\n        this.grad(p[BA + 1], x - 1, y, z - 1)),\r\n        this.lerp(u, this.grad(p[AB + 1], x, y - 1, z - 1),\r\n          this.grad(p[BB + 1], x - 1, y - 1, z - 1))));\r\n  }\r\n  private static fade(t) { return t * t * t * (t * (t * 6 - 15) + 10); }\r\n  private static lerp(t, a, b) { return a + t * (b - a); }\r\n  private static grad(hash, x, y, z) {\r\n    const h = hash & 15;\r\n    const u = h < 8 ? x : y,\r\n      v = h < 4 ? y : h == 12 || h == 14 ? x : z;\r\n    return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\r\n  };\r\n\r\n  private static octaves(x, y, z, p, persistence = 0.5, octaves = 6) {\r\n    let total = 0;\r\n    let frequency = 1;\r\n    let amplitude = 1;\r\n    let maxValue = 0;\r\n    for (let i = 0; i < octaves; i++) {\r\n      total += this.perlin(x * frequency, y * frequency, z * frequency, p) * amplitude;\r\n      maxValue += amplitude;\r\n      amplitude *= persistence;\r\n      frequency *= 2;\r\n    }\r\n    return total / maxValue;\r\n  }\r\n\r\n  public static readonly DefaultP = [151, 160, 137, 91, 90, 15,\r\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\r\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\r\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\r\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\r\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\r\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\r\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\r\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\r\n    129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\r\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\r\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\r\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\r\n\r\n  public static get RandomP(): number[] {\r\n    const array = new Uint8Array(256);\r\n    window.crypto.getRandomValues(array);\r\n    const list = [];\r\n    array.forEach((v) => list.push(v));\r\n    return list;\r\n  }\r\n\r\n  public static Noise(point: Point, factor = 1, p, persistence = 0.5, octaves = 6) {\r\n    return this.octaves(point.X/factor, point.Y/factor, point.Z/factor, p, persistence, octaves);\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'World';\n}\n","<map-tool>\r\n</map-tool>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapToolComponent } from 'src/_component/map-tool/map-tool.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapToolComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}