{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/_component/map-tool/map-tool.component.ts","webpack:///src/_component/map-tool/map-tool.component.html","webpack:///src/_enum/world.biome.ts","webpack:///src/_generator/world.generator.ts","webpack:///src/_model/coordinate.ts","webpack:///src/_model/point.ts","webpack:///src/_model/vector.ts","webpack:///src/_model/world.info.ts","webpack:///src/_utils/biome.color.ts","webpack:///src/_utils/conversor.ts","webpack:///src/_utils/helper.ts","webpack:///src/_utils/perlin.noise.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","MapToolComponent","world","sessionKey","position","zoom","step","jump","stepPoints","toggle","drawSvgMercator","console","log","context","canvas","nativeElement","getContext","projection","svg","width","document","body","clientWidth","height","clientHeight","attr","image","createImageData","renderSvgMercator","data","clearRect","i","byteLength","putImageData","getSvg","layers","selectAll","enter","append","d","map","start","X","Y","join","mercator","renderMercator","onlyShoreline","all","tree","ore","c","x","y","info","GetInformation","FromMercator","color","Get","Biome","Shoreline","cell","Uint8ClampedArray","array","GetAllMercatorPoints","mercatorPoint","ToMercator","coordinate","ToIdxWidth","points","length","Date","allVectors","no","topology","ne","so","se","push","copyAllVectors","condensedVectors","vector","pop","inverted","containsIn","filter","v","equals","copyCondensedVectors","layeredPaths","layer","startVector","copy","runner","end","vectorIdx","findIndex","splice","shrunkenLayeredPaths","forEach","shrunkenLayer","isCollinear","change","selector","templateUrl","styleUrls","WorldBiome","WorldGenerator","seed","useDefault","radius","noise","raw","trees","ores","prepareSeed","DefaultP","RandomP","generateNoise","generateNewNoise","Math","floor","JSON","parse","stringify","a","b","r","dist_points","onlyTopology","point","ToCardian","factor","trunc","Noise","inspector","ini","count","countLand","ret","TruncDecimals","getTime","decPl","DecimalPlaces","longitude","latitude","polygon","probePolygon","p","addLongitude","probeNearShorepoints","newPoints","beforeCount","newPoint","find","undefined","afterCount","east","eastInfo","shoreline","south","addLatitude","southInfo","west","westInfo","north","northInfo","Coordinate","value","precision","Point","Z","Vector","A","dot","det","atan2","WorldInfo","deepWater","swallowWater","beach","sandy","grass","woods","forest","mountain","snow","ToDegrees","inner","item","itemPoint","variator","BiomeColor","type","Conversor","atan","sqrt","pow","cos","ToRadians","sin","angle","PI","round","RAD2DEG","PI_4","Helper","num","n","toString","charAt","replace","stepX","stepY","idx","Perlin","z","u","fade","w","AA","AB","B","BA","BB","lerp","grad","t","hash","h","persistence","octaves","total","frequency","amplitude","maxValue","perlin","Uint8Array","window","crypto","getRandomValues","list","routes","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { WorldGenerator } from 'src/_generator/world.generator';\r\nimport { BiomeColor } from 'src/_utils/biome.color';\r\nimport { Point } from 'src/_model/point';\r\nimport * as d3 from 'd3';\r\nimport { WorldInfo } from 'src/_model/world.info';\r\nimport { Conversor } from 'src/_utils/conversor';\r\nimport { Vector } from 'src/_model/vector';\r\n\r\ninterface Datum {\r\n  id: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'map-tool',\r\n  templateUrl: './map-tool.component.html',\r\n  styleUrls: ['./map-tool.component.scss']\r\n})\r\nexport class MapToolComponent implements AfterViewInit {\r\n  world: WorldGenerator = new WorldGenerator();\r\n  @ViewChild('canvas', { static: false }) canvas: ElementRef;\r\n  @ViewChild('svg', { static: false }) svg: ElementRef;\r\n  public context: CanvasRenderingContext2D;\r\n\r\n  public sessionKey = 'points';\r\n\r\n  position = new Point(0, 0, 0);\r\n  zoom = 1;\r\n\r\n  step = 20;\r\n  jump = 1.25;\r\n\r\n  stepPoints = 0.2;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // public get Points(): Promise<WorldInfo[]> {\r\n  //   return new Promise<WorldInfo[]>((resolve) => {\r\n  //     if (sessionStorage.getItem(this.sessionKey) === null) {\r\n  //       this.world.GetAllPoints(this.stepPoints).then((p) => {\r\n  //         sessionStorage.setItem(this.sessionKey, JSON.stringify(p));\r\n  //         console.log('new points', p.length);\r\n  //         resolve(p);\r\n  //       });\r\n  //     } else {\r\n  //       resolve(JSON.parse(sessionStorage.getItem(this.sessionKey)));\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // public set Points(points: Promise<WorldInfo[]>) {\r\n  //   points.then((p) => {\r\n  //     sessionStorage.setItem(this.sessionKey, JSON.stringify(p));\r\n  //   });\r\n  // }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    //this.change();\r\n\r\n    //this.drawMercator();\r\n    // this.drawMercatorAlt().then(d => {\r\n    //   console.log('done', d);\r\n    // });\r\n    //this.drawGlobe();\r\n\r\n    this.drawSvgMercator();\r\n\r\n    console.log('done');\r\n  }\r\n\r\n  public toggle = true;\r\n  public change() {\r\n    // if (this.toggle) {\r\n    //   this.drawMercator();\r\n    // } else {\r\n    //   this.drawMercatorAlt().then(d => {\r\n    //     console.log('done', d);\r\n    //   });\r\n    // }\r\n    // this.toggle = !this.toggle;\r\n  }\r\n\r\n  private drawSvgMercator() {\r\n\r\n    this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n    const projection = d3.geoOrthographic();\r\n    const svg = d3.select(this.svg.nativeElement);\r\n\r\n    const width = document.body.clientWidth - 40;\r\n    const height = (document.body.clientHeight - 40);\r\n\r\n    this.canvas.nativeElement.width = width;\r\n    this.canvas.nativeElement.height = height;\r\n\r\n    svg.attr('width', width).attr('height', height);\r\n\r\n    const image = this.context.createImageData(width, height);\r\n\r\n    this.renderSvgMercator(width, height).then(data => {\r\n      this.context.clearRect(0, 0, width, height);\r\n      for (let i = 0; i < data.image.byteLength; i++) {\r\n        image.data[i] = data.image[i];\r\n      }\r\n      this.context.putImageData(image, 0, 0);\r\n\r\n      this.getSvg(data.world, width, height).then((layers) => {\r\n        // layers.forEach(layer => {\r\n        //   const element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n        //   let path = `M ${layer[0].start.X} ${layer[0].start.Y} `;\r\n        //   layer.forEach(vector => {\r\n        //     path += `L ${vector.end.X} ${vector.end.Y} `;\r\n        //   });\r\n        //   path += 'Z';\r\n        //   element.setAttribute('d', path);\r\n        //   const clockwise = layer[0].isClockwise(layer[1]);\r\n        //   element.style.stroke = '#000';\r\n        //   element.style.strokeWidth = '1px';\r\n\r\n        //   this.svg.nativeElement.appendChild(element);\r\n        // });\r\n\r\n        // const svg = d3.select(this.svg.nativeElement);\r\n        // svg.attr('width', width).attr('height', height);\r\n        svg.selectAll(\"polygon\").data(layers).enter().append(\"polygon\").attr(\"points\", (d) => {\r\n          return d.map(function (d) {\r\n            return [d.start.X, d.start.Y].join(\",\");\r\n          }).join(\" \");\r\n        });\r\n      });\r\n    });\r\n\r\n    // const svg = d3.select(this.svg.nativeElement);\r\n    // const x = (long: number) => (long + 180)/(360 / width);\r\n    // const y = (lat: number) => (lat + 90)/(180 / height);\r\n\r\n    // svg.attr('width', width).attr('height', height);\r\n\r\n    // const points: WorldInfo[][] = this.world.GetShorlines();\r\n    // console.log(`points len ${points.length}`);\r\n\r\n    // svg.selectAll(\"polygon\").data(points).enter().append(\"polygon\").attr(\"points\", (d) => {\r\n    //   return d.map(function (d) {\r\n    //     const point = Conversor.ToMercator(d.coordinate, width, height);\r\n    //     return [point.X, point.Y].join(\",\");\r\n    //   }).join(\" \");\r\n    // });\r\n\r\n  }\r\n\r\n  // private drawGlobe() {\r\n  //   this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n  //   const projection = d3.geoOrthographic();\r\n\r\n  //   const width = document.body.clientWidth - 40;\r\n  //   const height = document.body.clientHeight - 40;\r\n\r\n  //   this.canvas.nativeElement.width = width;\r\n  //   this.canvas.nativeElement.height = height;\r\n\r\n  //   const mercator = this.renderMercator(this.context.createImageData(width, height));\r\n\r\n  //   const globe = this.context.createImageData(width, height);\r\n  //   this.renderGlobe(globe, mercator.data, projection);\r\n  //   this.context.clearRect(0, 0, width, height);\r\n  //   this.context.putImageData(globe, 0, 0);\r\n\r\n  //   document.onmousemove = (event) => {\r\n  //     var p = [event.clientX, event.clientY];\r\n  //     const λM = d3.scaleLinear().domain([0, width]).range([-180, 180]);\r\n  //     const φM = d3.scaleLinear().domain([0, height]).range([90, -90]);\r\n\r\n  //     projection.rotate([λM(p[0]), φM(p[1])]);\r\n\r\n  //     this.renderGlobe(globe, mercator.data, projection);\r\n\r\n  //     this.context.clearRect(0, 0, width, height);\r\n  //     this.context.putImageData(globe, 0, 0);\r\n  //   };\r\n  // }\r\n\r\n  private drawMercator() {\r\n    this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n    const projection = d3.geoOrthographic();\r\n\r\n    const width = document.body.clientWidth - 40;\r\n    const height = document.body.clientHeight - 40;\r\n\r\n    this.canvas.nativeElement.width = width;\r\n    this.canvas.nativeElement.height = height;\r\n\r\n    const mercator = this.renderMercator(this.context.createImageData(width, height));\r\n\r\n    this.context.clearRect(0, 0, width, height);\r\n    this.context.putImageData(mercator, 0, 0);\r\n  }\r\n\r\n  private renderMercator(image: ImageData, onlyShoreline = false) {\r\n    const data = image.data;\r\n    const width = image.width;\r\n    const height = image.height;\r\n    let all = 0;\r\n    let tree = 0;\r\n    let ore = 0;\r\n    let c = 0;\r\n\r\n    for (var x = 0; x < width; x++) {\r\n      for (var y = 0; y < height; y++) {\r\n        let info = this.world.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), this.zoom);\r\n        let color = BiomeColor.Get(info.Biome);\r\n\r\n        if (onlyShoreline) {\r\n          if (info.Shoreline) {\r\n            color = [0, 0, 0, 255];\r\n            c++;\r\n          } else {\r\n            color = [255, 255, 255, 255];\r\n          }\r\n        }\r\n\r\n        let cell = (x + y * width) * 4;\r\n\r\n        data[cell] = color[0];\r\n        data[cell + 1] = color[1];\r\n        data[cell + 2] = color[2];\r\n        data[cell + 3] = color[3];\r\n\r\n        all++;\r\n      }\r\n    }\r\n    console.log(`info all:${all} tree:${tree} ore:${ore} ${width}x${height} ${c}`);\r\n\r\n    return image;\r\n  }\r\n\r\n  private renderMercator2(width: number, height: number) {\r\n    let all = 0;\r\n\r\n    const data: Uint8ClampedArray = new Uint8ClampedArray(width * height * 4);\r\n\r\n    for (var x = 0; x < width; x++) {\r\n      for (var y = 0; y < height; y++) {\r\n        let info = this.world.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), this.zoom);\r\n        let color = BiomeColor.Get(info.Biome);\r\n\r\n        let cell = (x + y * width) * 4;\r\n\r\n        data[cell] = color[0];\r\n        data[cell + 1] = color[1];\r\n        data[cell + 2] = color[2];\r\n        data[cell + 3] = color[3];\r\n\r\n        all++;\r\n      }\r\n    }\r\n    console.log(`alt info all:${all} ${width}x${height}`);\r\n\r\n    return data;\r\n  }\r\n\r\n  // private async drawMercatorAlt() {\r\n  //   this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n  //   const projection = d3.geoOrthographic();\r\n\r\n  //   const width = document.body.clientWidth - 40;\r\n  //   const height = document.body.clientHeight - 40;\r\n\r\n  //   this.canvas.nativeElement.width = width;\r\n  //   this.canvas.nativeElement.height = height;\r\n\r\n  //   const mercator = await this.renderMercatorAlt(this.context.createImageData(width, height));\r\n\r\n  //   this.context.clearRect(0, 0, width, height);\r\n  //   this.context.putImageData(mercator, 0, 0);\r\n  // }\r\n\r\n  // private renderMercatorAlt(image: ImageData): Promise<ImageData> {\r\n  //   return new Promise<ImageData>((resolve) => {\r\n  //     const data = image.data;\r\n  //     const width = image.width;\r\n  //     const height = image.height;\r\n  //     let all = 0;\r\n  //     let tree = 0;\r\n  //     let ore = 0;\r\n\r\n  //     const stepX = width * this.stepPoints / 360;\r\n  //     const stepY = height * this.stepPoints / 180;\r\n\r\n  //     const sizeX = stepX * (360 / this.stepPoints);\r\n  //     const sizeY = stepY * (180 / this.stepPoints);\r\n\r\n  //     this.world.GetAllPoints(this.stepPoints).then((points) => {\r\n  //       console.log('length', points.length, width, height, width*height, `x ${sizeX} ${stepX} ${360 / this.stepPoints}`, `y ${sizeY} ${stepY} ${180 / this.stepPoints}`);\r\n\r\n  //       for (var x = 0; x < width; x++) {\r\n  //         for (var y = 0; y < height; y++) {\r\n  //           let idx = Helper.IdxMatrixToVector(new Point(x, y, 0), width, stepX, stepY);\r\n\r\n  //           let info = points[idx];\r\n\r\n  //           // if (x % 100 === 0)\r\n  //           //   console.log('trouble2', x, y, idx, info);\r\n\r\n  //           let color = BiomeColor.Get(info.Biome);\r\n\r\n  //           // if (info.Biome === WorldBiome.beach) {\r\n  //           //   color = [0, 0, 0, 255];\r\n  //           // } else {\r\n  //           //   color = [255, 255, 255, 255];\r\n  //           // }\r\n\r\n  //           let cell = (x + y * image.width) * 4;\r\n\r\n  //           data[cell] = color[0];\r\n  //           data[cell + 1] = color[1];\r\n  //           data[cell + 2] = color[2];\r\n  //           data[cell + 3] = color[3];\r\n\r\n  //           all++;\r\n  //         }\r\n  //       }\r\n\r\n  //       console.log(`info all:${all} tree:${tree} ore:${ore} ${width}x${height}`);\r\n  //       resolve(image);\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  private renderSvgMercator(width: number, height: number, onlyShoreline = false) {\r\n    return new Promise<{ world: WorldInfo[], image: Uint8ClampedArray }>((resolve) => {\r\n      let all = 0;\r\n      let tree = 0;\r\n      let ore = 0;\r\n      let c = 0;\r\n      const array: Uint8ClampedArray = new Uint8ClampedArray(width * height * 4);\r\n\r\n      this.world.GetAllMercatorPoints(width, height, (info) => {\r\n        let color = BiomeColor.Get(info.Biome);\r\n\r\n        if (onlyShoreline) {\r\n          if (info.Shoreline) {\r\n            color = [0, 0, 0, 255];\r\n            c++;\r\n          } else {\r\n            color = [255, 255, 255, 255];\r\n          }\r\n        }\r\n\r\n        let mercatorPoint = Conversor.ToMercator(info.coordinate, width, height);\r\n        let cell = Conversor.ToIdxWidth(mercatorPoint, width) * 4;\r\n\r\n        array[cell] = color[0];\r\n        array[cell + 1] = color[1];\r\n        array[cell + 2] = color[2];\r\n        array[cell + 3] = color[3];\r\n\r\n        all++;\r\n\r\n      }).then((points) => {\r\n        console.log(`info svg all:${all} tree:${tree} ore:${ore} ${width}x${height} ${c}`);\r\n        resolve({ world: points, image: array });\r\n      });\r\n    });\r\n  }\r\n\r\n  // private renderGlobe(image: ImageData, mercatorData: Uint8ClampedArray, projection = d3.geoOrthographic()) {\r\n  //   const width = image.width;\r\n  //   const height = image.height;\r\n  //   const data = image.data;\r\n\r\n  //   for (var y = 0, i = -1; y < height; ++y) {\r\n  //     for (var x = 0; x < width; ++x) {\r\n  //       var p = projection.invert([x, y]), λ = p[0], φ = p[1];\r\n  //       if (λ > 180 || λ < -180 || φ > 90 || φ < -90) {\r\n  //         i += 4;\r\n  //         continue;\r\n  //       }\r\n  //       var q = ((90 - φ) / 180 * height | 0) * width + ((180 + λ) / 360 * width | 0) << 2;\r\n  //       data[++i] = mercatorData[q];\r\n  //       data[++i] = mercatorData[++q];\r\n  //       data[++i] = mercatorData[++q];\r\n  //       data[++i] = 255;\r\n  //     }\r\n  //   }\r\n\r\n  //   return image;\r\n  // }\r\n\r\n  private getSvg(world: WorldInfo[], width: number, height: number): Promise<Vector[][]> {\r\n    return new Promise<Vector[][]>(resolve => {\r\n      console.log('world', world.length, new Date());\r\n      const allVectors: Vector[] = [];\r\n      for (var x = 0; x < width - 1; x++) {\r\n        for (var y = 0; y < height - 1; y++) {\r\n          const no = new Point(x, y, 0);\r\n          if (world[Conversor.ToIdxWidth(no, width)].topology < 0.5) continue;\r\n          const ne = new Point((1 + x), y, 0);\r\n          if (world[Conversor.ToIdxWidth(ne, width)].topology < 0.5) continue;\r\n          const so = new Point(x, (1 + y), 0);\r\n          if (world[Conversor.ToIdxWidth(so, width)].topology < 0.5) continue;\r\n          const se = new Point((1 + x), (1 + y), 0);\r\n          if (world[Conversor.ToIdxWidth(se, width)].topology < 0.5) continue;\r\n\r\n          allVectors.push(new Vector(no, ne));\r\n          allVectors.push(new Vector(ne, se));\r\n          allVectors.push(new Vector(se, so));\r\n          allVectors.push(new Vector(so, no));\r\n        }\r\n      }\r\n      console.log('allVectors', allVectors.length, new Date());\r\n      let copyAllVectors = [...allVectors];\r\n      const condensedVectors: Vector[] = [];\r\n      while (copyAllVectors.length > 0) {\r\n        const vector = copyAllVectors.pop();\r\n        if (!vector.inverted.containsIn(copyAllVectors)) {\r\n          condensedVectors.push(vector);\r\n        } else {\r\n          copyAllVectors = copyAllVectors.filter((v) => !v.equals(vector.inverted));\r\n        }\r\n      }\r\n      console.log('condensedVectors', condensedVectors.length, new Date());\r\n      let copyCondensedVectors = [...condensedVectors];\r\n      const layeredPaths: Vector[][] = [];\r\n      while (copyCondensedVectors.length > 0) {\r\n        const layer: Vector[] = [];\r\n        const startVector = copyCondensedVectors.pop();\r\n        layer.push(startVector.copy);\r\n        let runner = startVector.copy;\r\n        while (!runner.end.equals(startVector.start)) {\r\n          const vectorIdx = copyCondensedVectors.findIndex((v) => runner.end.equals(v.start));\r\n          runner = copyCondensedVectors.splice(vectorIdx, 1)[0];\r\n          layer.push(runner.copy);\r\n        }\r\n        layeredPaths.push(layer);\r\n      }\r\n      console.log('layeredPaths', layeredPaths.length, new Date(), layeredPaths);\r\n      const shrunkenLayeredPaths: Vector[][] = [];\r\n      layeredPaths.forEach((layer) => {\r\n        const shrunkenLayer: Vector[] = [];\r\n        let runner: Vector = layer[0].copy;\r\n        for (let i = 1; i < layer.length; i++) {\r\n          if (runner.isCollinear(layer[i].end)) {\r\n            runner = new Vector(runner.start, layer[i].end);\r\n          } else {\r\n            shrunkenLayer.push(runner.copy);\r\n            runner = layer[i].copy;\r\n          }\r\n        }\r\n        shrunkenLayer.push(runner.copy);\r\n        shrunkenLayeredPaths.push(shrunkenLayer);\r\n      });\r\n      console.log('shrunkenLayeredPaths', shrunkenLayeredPaths.length, new Date(), shrunkenLayeredPaths);\r\n      resolve(shrunkenLayeredPaths);\r\n    });\r\n  }\r\n\r\n  // private getShorelines(width: number, height: number): WorldInfo[][] {\r\n  //   const points: WorldInfo[][] = [];\r\n\r\n  //   for (var x = 0; x < width; x++) {\r\n  //     for (var y = 0; y < height; y++) {\r\n  //       let info = this.world.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), this.zoom);\r\n  //       if (info.Shoreline) {\r\n  //         if (points[x] === undefined) points[x] = [];\r\n  //         points[x][y] = info;\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   const all = WorldInfo.AllInOne(points);\r\n\r\n  //   const polygonPoints: WorldInfo[][] = [];\r\n\r\n  //   // while (points.length > 0) {\r\n  //   const polygon: WorldInfo[] = [];\r\n  //   let current: WorldInfo = null;\r\n\r\n  //   const first: WorldInfo = all[0];\r\n\r\n  //   console.log('first', first);\r\n  //   WorldInfo.RemoveOne(points, first, width, height);\r\n  //   polygon.push(first);\r\n\r\n  //   while (first !== current) {\r\n  //     const actualPoint = Conversor.ToMercator((current ?? first).coordinate, width, height);\r\n  //     const allnear = WorldInfo.GetAllNear(all, actualPoint, width, height);\r\n  //     console.log('all near', allnear);\r\n\r\n  //     // const nearNewPoints = allnear.filter((n: WorldInfo) => polygon.includes((p: WorldInfo) => (p.coordinate.longitude === n.coordinate.longitude && p.coordinate.latitude === n.coordinate.latitude)));\r\n\r\n  //     const nearNewPoints = [];\r\n  //     allnear.forEach((n) => {\r\n  //       let exists = false;\r\n  //       polygon.forEach((p) => {\r\n  //         if (p.coordinate.longitude === n.coordinate.longitude && p.coordinate.latitude === n.coordinate.latitude) {\r\n  //           exists = true;\r\n  //           return;\r\n  //         }\r\n  //       });\r\n  //       if (!exists) {\r\n  //         nearNewPoints.push(n);\r\n  //       }\r\n  //     });\r\n\r\n\r\n  //     const nearNewPoint = nearNewPoints.sort((a: WorldInfo, b: WorldInfo) => {\r\n  //       return (Helper.Pitagoras(Conversor.ToMercator(a.coordinate, width, height), actualPoint) <= Helper.Pitagoras(Conversor.ToMercator(b.coordinate, width, height), actualPoint)) ? 1 : -1;\r\n  //     })[0];\r\n\r\n  //     console.log('near', nearNewPoints, nearNewPoint);\r\n  //     WorldInfo.RemoveOne(points, nearNewPoint, width, height);\r\n  //     polygon.push(nearNewPoint);\r\n  //     current = nearNewPoint;\r\n\r\n  //   }\r\n  //   console.log('polygon', polygon);\r\n  //   polygonPoints.push(polygon);\r\n  //   // }\r\n\r\n  //   return polygonPoints;\r\n  // }\r\n}","<div class='centerbox'>\r\n  <canvas #canvas (click)=\"change()\"></canvas>\r\n  <svg #svg></svg>\r\n</div>","export enum WorldBiome {\r\n  deepWater,\r\n  swallowWater,\r\n  shoreline,\r\n  beach,\r\n  sandy,\r\n  grass,\r\n  woods,\r\n  forest,\r\n  mountain,\r\n  snow\r\n}","import { WorldInfo } from 'src/_model/world.info';\r\nimport { Point } from 'src/_model/point';\r\nimport { Perlin } from '../_utils/perlin.noise';\r\nimport { Coordinate } from 'src/_model/coordinate';\r\nimport { Conversor } from 'src/_utils/conversor';\r\nimport { WorldBiome } from 'src/_enum/world.biome';\r\nimport { Helper } from 'src/_utils/helper';\r\nimport { Vector } from 'src/_model/vector';\r\n\r\nexport class WorldGenerator {\r\n  private noise = { raw: [], topology: [], trees: [], ores: [] };\r\n  constructor(public seed = 8, useDefault = true, public radius = 5000) {\r\n    this.prepareSeed(seed);\r\n    this.noise.raw = useDefault ? Perlin.DefaultP : Perlin.RandomP;\r\n    this.noise.topology = this.generateNoise(this.noise.raw, seed);\r\n    this.noise.trees = this.generateNoise(this.generateNewNoise(), seed);\r\n    this.noise.ores = this.generateNoise(this.generateNewNoise(2), seed);\r\n  }\r\n\r\n  private prepareSeed(seed) {\r\n    if (seed > 0 && seed < 1) {\r\n      seed *= 65536;\r\n    }\r\n    seed = Math.floor(seed);\r\n    if (seed < 256) {\r\n      seed |= seed << 8;\r\n    }\r\n  }\r\n\r\n  private generateNoise(array, seed) {\r\n    const data = [];\r\n    for (let i = 0; i < 256; i++) {\r\n      if (i & 1) {\r\n        data[i] = data[i + 256] = array[i] ^ (seed & 255);\r\n      }\r\n      else {\r\n        data[i] = data[i + 256] = array[i] ^ ((seed >> 8) & 255);\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private generateNewNoise(jump = 1) {\r\n    const data: [] = JSON.parse(JSON.stringify(this.noise.raw));\r\n    const noise = [];\r\n    while (data.length > 0) {\r\n      if (data.length <= jump)\r\n        noise.push(data.pop());\r\n      else\r\n        noise.push(data.splice(jump, 1));\r\n    }\r\n    return noise;\r\n  }\r\n\r\n  private cicle_gradient(a, b, x, y, r) {\r\n    var dist_points = (a - x) * (a - x) + (b - y) * (b - y);\r\n    r *= r;\r\n    return dist_points < r ? (((dist_points * 100 / r) - 100) * -1) / 100 : 0;\r\n  }\r\n\r\n  public GetInformation(coordinate: Coordinate, zoom = 1, onlyTopology: boolean = false) {\r\n    if (!(coordinate.radius != null)) {\r\n      coordinate.radius = zoom;\r\n    }\r\n    var point = Conversor.ToCardian(coordinate);\r\n    const factor = zoom;//this.radius * zoom;\r\n    const topology = Math.trunc((Perlin.Noise(point, factor, this.noise.topology, 0.68) + 0.5) * 100) / 100;\r\n    let trees = null;\r\n    let ores = null;\r\n    if (!onlyTopology) {\r\n      trees = Math.trunc((Perlin.Noise(point, factor * 100, this.noise.trees, 0.68) + 0.5) * 100) / 100;\r\n      ores = Math.trunc((Perlin.Noise(point, factor * 100, this.noise.ores, 0.68) + 0.5) * 100) / 100;\r\n    }\r\n    return new WorldInfo(topology, trees, ores, coordinate, point);\r\n  }\r\n\r\n  public GetAllMercatorPoints(width: number, height: number, inspector: (a: WorldInfo)=> void = null): Promise<WorldInfo[]> {\r\n    return new Promise<WorldInfo[]>((resolve) => {\r\n      const ini = new Date();\r\n      let count = 0;\r\n      let countLand = 0;\r\n      const ret: WorldInfo[] = [];\r\n      for (let x = 0; x < width; x++) {\r\n        for (let y = 0; y < height; y++) {\r\n          const info = this.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), 1);\r\n          if (info.topology >= 0.5) countLand++;\r\n          if (inspector !== null) {\r\n            inspector(info);\r\n          }\r\n          ret.push(info);\r\n          count++;\r\n        }\r\n      }\r\n      const end = new Date();\r\n      console.log(`duration ${Helper.TruncDecimals(end.getTime() / 1000 - ini.getTime() / 1000, 3)}s with count: ${count} ${countLand}`);\r\n      resolve(ret);\r\n    });\r\n  }\r\n\r\n  public GetAllPoints(step = 0.0001): Promise<WorldInfo[]> {\r\n    return new Promise<WorldInfo[]>((resolve) => {\r\n      const ini = new Date();\r\n      let count = 0;\r\n      const decPl = Helper.DecimalPlaces(step);\r\n      console.log('decimal', decPl, step);\r\n      const ret: WorldInfo[] = [];\r\n      for (let longitude = -90; longitude <= 90; longitude += step) {\r\n        for (let latitude = -180; latitude <= 180; latitude += step) {\r\n          ret.push(this.GetInformation(new Coordinate(Helper.TruncDecimals(longitude, decPl), Helper.TruncDecimals(latitude, decPl)), 1, true));\r\n          count++;\r\n        }\r\n      }\r\n      const end = new Date();\r\n      console.log(`duration ${Helper.TruncDecimals(end.getTime() / 1000 - ini.getTime() / 1000, 3)}s with count: ${count}`);\r\n      resolve(ret);\r\n    });\r\n  }\r\n\r\n  private getSvg(width: number, height: number): Promise<Vector[][]> {\r\n    return new Promise<Vector[][]>(resolve => {\r\n      console.log('start', new Date());\r\n      const allVectors: Vector[] = [];\r\n      for (var x = 0; x < width - 1; x++) {\r\n        for (var y = 0; y < height - 1; y++) {\r\n          const no = new Point(x, y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(no, width, height), 1).topology < 0.5) continue;\r\n          const ne = new Point((1 + x), y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(ne, width, height), 1).topology < 0.5) continue;\r\n          const so = new Point(x, (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(so, width, height), 1).topology < 0.5) continue;\r\n          const se = new Point((1 + x), (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(se, width, height), 1).topology < 0.5) continue;\r\n\r\n          allVectors.push(new Vector(no, ne));\r\n          allVectors.push(new Vector(ne, se));\r\n          allVectors.push(new Vector(se, so));\r\n          allVectors.push(new Vector(so, no));\r\n        }\r\n      }\r\n      console.log('allVectors', allVectors.length, new Date());\r\n      let copyAllVectors = [...allVectors];\r\n      const condensedVectors: Vector[] = [];\r\n      while (copyAllVectors.length > 0) {\r\n        const vector = copyAllVectors.pop();\r\n        if (!vector.inverted.containsIn(copyAllVectors)) {\r\n          condensedVectors.push(vector);\r\n        } else {\r\n          copyAllVectors = copyAllVectors.filter((v) => !v.equals(vector.inverted));\r\n        }\r\n      }\r\n      console.log('condensedVectors', condensedVectors.length, new Date());\r\n      let copyCondensedVectors = [...condensedVectors];\r\n      const layeredPaths: Vector[][] = [];\r\n      while (copyCondensedVectors.length > 0) {\r\n        const layer: Vector[] = [];\r\n        const startVector = copyCondensedVectors.pop();\r\n        layer.push(startVector.copy);\r\n        let runner = startVector.copy;\r\n        while (!runner.end.equals(startVector.start)) {\r\n          const vectorIdx = copyCondensedVectors.findIndex((v) => runner.end.equals(v.start));\r\n          runner = copyCondensedVectors.splice(vectorIdx, 1)[0];\r\n          layer.push(runner.copy);\r\n        }\r\n        layeredPaths.push(layer);\r\n      }\r\n      console.log('layeredPaths', layeredPaths.length, new Date(), layeredPaths);\r\n      const shrunkenLayeredPaths: Vector[][] = [];\r\n      layeredPaths.forEach((layer) => {\r\n        const shrunkenLayer: Vector[] = [];\r\n        let runner: Vector = layer[0].copy;\r\n        for (let i = 1; i < layer.length; i++) {\r\n          if (runner.isCollinear(layer[i].end)) {\r\n            runner = new Vector(runner.start, layer[i].end);\r\n          } else {\r\n            shrunkenLayer.push(runner.copy);\r\n            runner = layer[i].copy;\r\n          }\r\n        }\r\n        shrunkenLayer.push(runner.copy);\r\n        shrunkenLayeredPaths.push(shrunkenLayer);\r\n      });\r\n      console.log('shrunkenLayeredPaths', shrunkenLayeredPaths.length, new Date(), shrunkenLayeredPaths);\r\n      resolve(shrunkenLayeredPaths);\r\n    });\r\n  }\r\n\r\n  public GetShorlines(step = 0.0001): WorldInfo[][] {\r\n    const ret: WorldInfo[][] = [];\r\n    const coordinate = new Coordinate(0, 0);\r\n    const polygon: Coordinate[] = this.probePolygon(coordinate, step);\r\n    ret.push(polygon.map((p) => this.GetInformation(p)));\r\n    return ret;\r\n  }\r\n\r\n  private probePolygon(coordinate = new Coordinate(0, 0), step = 0.0001): Coordinate[] {\r\n    const polygon: Coordinate[] = [];\r\n    let points: Coordinate[] = [];\r\n    do {\r\n      coordinate = coordinate.addLongitude(step);\r\n      points = this.probeNearShorepoints(coordinate, step);\r\n    } while (points === [])\r\n\r\n    while (points.length !== 0) {\r\n      const newPoints = [];\r\n      points.forEach((point: Coordinate) => {\r\n        // const point = points[0];\r\n        polygon.push(point);\r\n        console.log('point', point, polygon.length);\r\n        newPoints.push(...this.probeNearShorepoints(point, step));\r\n      });\r\n      const beforeCount = newPoints.length;\r\n      points = newPoints.filter((newPoint: Coordinate) => polygon.find((p: Coordinate) => p.latitude === newPoint.latitude && p.longitude === newPoint.longitude) === undefined);\r\n      const afterCount = points.length;\r\n      if (afterCount === beforeCount) {\r\n        console.log('problema', afterCount, beforeCount);\r\n      } else if (afterCount > beforeCount) {\r\n        console.log('mais problema ainda', afterCount, beforeCount);\r\n      } else {\r\n        console.log('ok', afterCount, beforeCount);\r\n      }\r\n    }\r\n\r\n    console.log('finito', polygon);\r\n\r\n    return polygon;\r\n  }\r\n\r\n  private probeNearShorepoints(coordinate: Coordinate, step = 0.0001): Coordinate[] {\r\n    const points: Coordinate[] = [];\r\n    const east = coordinate.addLongitude(step);\r\n    const eastInfo = this.GetInformation(east, 1, true);\r\n    if (eastInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('east', east, eastInfo);\r\n      points.push(east);\r\n    }\r\n    const south = coordinate.addLatitude(step);\r\n    const southInfo = this.GetInformation(south, 1, true);\r\n    if (southInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('south', south, southInfo);\r\n      points.push(south);\r\n    }\r\n    const west = coordinate.addLongitude(-step);\r\n    const westInfo = this.GetInformation(west, 1, true);\r\n    if (westInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('west', west, westInfo);\r\n      points.push(west);\r\n    }\r\n    const north = coordinate.addLatitude(-step);\r\n    const northInfo = this.GetInformation(north, 1, true);\r\n    if (northInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('north', north, northInfo);\r\n      points.push(north);\r\n    }\r\n    return points;\r\n  }\r\n}","import { Helper } from 'src/_utils/helper';\r\n\r\nexport class Coordinate {\r\n  constructor(public latitude: number, public longitude: number, public radius?: number) { }\r\n\r\n  public addLatitude(value: number, precision = 4) {\r\n    return new Coordinate(Helper.TruncDecimals(this.latitude + value, precision), this.longitude);\r\n  }\r\n  public addLongitude(value: number, precision = 4) {\r\n    return new Coordinate(this.latitude, Helper.TruncDecimals(this.longitude + value, precision));\r\n  }\r\n}","export class Point {\r\n  constructor(public X: number, public Y: number, public Z: number) { }\r\n\r\n  public equals(point: Point): boolean {\r\n    return (this.X === point.X && this.Y === point.Y && this.Z === point.Z);\r\n  }\r\n}","import { Point } from \"./point\";\n\nexport class Vector {\n  constructor(public start: Point, public end: Point) { }\n\n  public get inverted(): Vector {\n    return new Vector(this.end, this.start);\n  }\n\n  public get copy(): Vector {\n    return new Vector(this.start, this.end);\n  }\n\n  public containsIn(array: Vector[]): boolean {\n    for (let i = 0; i < array.length; i++) {\n      if ((array[i].start.equals(this.start)) && (array[i].end.equals(this.end))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public isCollinear(a: Point): boolean {\n    const A = this.start.X * (this.end.Y - a.Y) + this.end.X * (a.Y - this.start.Y) + a.X * (this.start.Y - this.end.Y);\n    return A === 0;\n  }\n\n  public isClockwise(vector: Vector): boolean {\n    const dot = (this.end.X - this.start.X)*(vector.end.X - vector.start.X) + (this.end.Y - this.start.Y)*(vector.end.Y - vector.start.Y);\n    const det = (this.end.X - this.start.X)*(vector.end.Y - vector.start.Y) - (this.end.Y - this.start.Y)*(vector.end.X - vector.start.X);\n    return Math.atan2(det, dot) > 0;\n  }\n\n  public equals(vector: Vector): boolean {\n    return (this.start.equals(vector.start) && this.end.equals(vector.end));\n  }\n}","import { WorldBiome } from 'src/_enum/world.biome';\r\nimport { Point } from 'src/_model/point';\r\nimport { Coordinate } from 'src/_model/coordinate';\r\nimport { Conversor } from 'src/_utils/conversor';\r\n\r\nexport class WorldInfo {\r\n  public constructor(public topology: number, public trees: number, public ores: number, public coordinate: Coordinate, public point: Point) { }\r\n\r\n  public get Biome(): WorldBiome {\r\n    if (this.topology < 0.35) {\r\n      return WorldBiome.deepWater;\r\n    } else if (this.topology < 0.50) {\r\n      return WorldBiome.swallowWater;\r\n    } else if (this.topology === 0.50) {\r\n      return WorldBiome.shoreline;\r\n    } else if (this.topology < 0.53) {\r\n      return WorldBiome.beach;\r\n    } else if (this.topology < 0.56) {\r\n      return WorldBiome.sandy;\r\n    } else if (this.topology < 0.62) {\r\n      return WorldBiome.grass;\r\n    } else if (this.topology < 0.70) {\r\n      return WorldBiome.woods;\r\n    } else if (this.topology < 0.75) {\r\n      return WorldBiome.forest;\r\n    } else if (this.topology < 0.80) {\r\n      return WorldBiome.mountain;\r\n    } else if (this.topology < 0.90) {\r\n      return WorldBiome.snow;\r\n    }\r\n  };\r\n\r\n  public get Shoreline(): boolean {\r\n    return this.topology === 0.50;\r\n  }\r\n\r\n  public get Tree(): boolean {\r\n    return (this.trees < 0.20) && this.Biome == WorldBiome.grass;\r\n  }\r\n\r\n  public get Ore(): boolean {\r\n    return (this.ores < 0.25);\r\n  }\r\n\r\n  public get LatitudeLine(): boolean {\r\n    return (Conversor.ToDegrees(this.coordinate.latitude) % 10 === 0);\r\n  }\r\n\r\n  public get LongitudeLine(): boolean {\r\n    return (Conversor.ToDegrees(this.coordinate.longitude) % 10 === 0);\r\n  }\r\n\r\n  public static AllInOne(data: any[][]): any[] {\r\n    const ret = [];\r\n    data.forEach((inner) => inner.forEach(d => {\r\n      if (d !== null) {\r\n        ret.push(d);\r\n      }\r\n    }))\r\n    return ret;\r\n  }\r\n\r\n  public static RemoveOne(points: WorldInfo[][], item: WorldInfo, width: number, height: number): void {\r\n    const itemPoint = Conversor.ToMercator(item.coordinate, width, height);\r\n    points[itemPoint.X].splice(itemPoint.Y, 1);\r\n  }\r\n\r\n  public static GetAllNear(points: WorldInfo[], point: Point, width: number, height: number): WorldInfo[] {\r\n    const variator = 2;\r\n    return points.filter((p: WorldInfo) => {\r\n      const itemPoint = Conversor.ToMercator(p.coordinate, width, height);\r\n      return (itemPoint.X >= point.X - variator && itemPoint.X <= point.X + variator) &&\r\n        (itemPoint.Y >= point.Y - variator && itemPoint.Y <= point.Y + variator) &&\r\n        (itemPoint.Z >= point.Z - variator && itemPoint.Z <= point.Z + variator);\r\n    });\r\n  }\r\n}","import { WorldBiome } from 'src/_enum/world.biome';\r\n\r\nexport class BiomeColor {\r\n  static swallowWater = [0, 191, 255, 255];\r\n  static deepWater = [65, 105, 225, 255];\r\n  static grass = [50, 205, 50, 255];\r\n  static woods = [34, 139, 34, 255];\r\n  static forest = [0, 100, 0, 255];\r\n  static sandy = [210, 180, 140, 255];\r\n  static beach = [238, 214, 175, 255];\r\n  static mountain = [139, 137, 137, 255];\r\n  static snow = [255, 250, 250, 255];\r\n\r\n  public static Get(type: WorldBiome) {\r\n    switch (type) {\r\n      case WorldBiome.deepWater:\r\n        return this.deepWater;\r\n      case WorldBiome.swallowWater:\r\n        return this.swallowWater;\r\n      case WorldBiome.woods:\r\n        return this.woods;\r\n      case WorldBiome.forest:\r\n        return this.forest;\r\n      case WorldBiome.sandy:\r\n        return this.sandy;\r\n      case WorldBiome.beach:\r\n        return this.beach;\r\n      case WorldBiome.mountain:\r\n        return this.mountain;\r\n      case WorldBiome.snow:\r\n        return this.snow;\r\n      default:\r\n      case WorldBiome.grass:\r\n        return this.grass;\r\n    }\r\n  }\r\n}","import { Coordinate } from 'src/_model/coordinate';\r\nimport { Point } from 'src/_model/point';\r\n\r\nexport class Conversor {\r\n  public static ToPolar(point: Point): Coordinate {\r\n    return new Coordinate(\r\n      Math.atan(point.Y / point.Z),\r\n      Math.atan(Math.sqrt(Math.pow(point.X, 2) + Math.pow(point.Y, 2) / point.Z)),\r\n      Math.sqrt(Math.pow(point.X, 2) + Math.pow(point.Y, 2) + Math.pow(point.Z, 2)));\r\n  }\r\n  public static ToCardian(coordinate: Coordinate): Point {\r\n    return new Point(\r\n      coordinate.radius * Math.cos(Conversor.ToRadians(coordinate.longitude)) * Math.cos(Conversor.ToRadians(coordinate.latitude)),\r\n      coordinate.radius * Math.sin(Conversor.ToRadians(coordinate.longitude)) * Math.cos(Conversor.ToRadians(coordinate.latitude)),\r\n      coordinate.radius * Math.sin(Conversor.ToRadians(coordinate.latitude)));\r\n  }\r\n  public static ToDegrees(angle: number): number {\r\n    return angle * (180 / Math.PI);\r\n  }\r\n  public static ToRadians(angle: number): number {\r\n    return angle * (Math.PI / 180);\r\n  }\r\n\r\n  public static ToMercator(coordinate: Coordinate, width: number, height: number): Point {\r\n    return new Point(Math.round((coordinate.longitude + 180)/(360 / width)), Math.round((coordinate.latitude + 90)/(180 / height)), 0);\r\n  }\r\n\r\n  public static FromMercator(point: Point, width: number, height: number): Coordinate {\r\n    return new Coordinate((point.Y * (180 / height)) - 90, (point.X * (360 / width)) - 180);\r\n  }\r\n\r\n  public static ToIdxWidth(point: Point, width: number): number {\r\n    return (point.X + (point.Y) * width);\r\n  }\r\n}\r\n\r\nexport const RAD2DEG = 180 / Math.PI;\r\nexport const PI_4 = Math.PI / 4;","import { Point } from 'src/_model/point';\r\n\r\nexport class Helper {\r\n  public static TruncDecimals(num: number, precision = 4): number {\r\n    return Math.trunc(Math.pow(10, precision) * num)/Math.pow(10, precision);\r\n  }\r\n\r\n  public static CloneAny(data: any): any {\r\n    return JSON.parse(JSON.stringify(data));\r\n  }\r\n\r\n  public static Pitagoras(a: Point, b: Point): number {\r\n    return Math.sqrt(Math.pow(a.X - b.X, 2) + Math.pow(a.Y - b.Y, 2) + Math.pow(a.Z - b.Z, 2));\r\n  }\r\n\r\n  public static DecimalPlaces(n: number) {\r\n    let a;\r\n    return (a=(n.toString().charAt(0)=='-'?n-1:n+1).toString().replace(/^-?[0-9]+\\.?([0-9]+)$/,'$1').length)>=1?a:0;\r\n  }\r\n\r\n  public static IdxMatrixToVector(point: Point, width: number, stepX = 1, stepY = 1): number {\r\n    return Math.trunc((point.Y) * width + (point.X));\r\n  }\r\n\r\n  public static IdxVectorToMatrix(idx: number, width: number, stepX = 1, stepY = 1): Point {\r\n    return new Point((idx % width), (idx / width), 0);\r\n  }\r\n}","import { Point } from 'src/_model/point';\r\n\r\nexport class Perlin {\r\n  private static perlin(x, y, z, p) {\r\n    const X = Math.floor(x) & 255,\r\n      Y = Math.floor(y) & 255,\r\n      Z = Math.floor(z) & 255;\r\n    x -= Math.floor(x);\r\n    y -= Math.floor(y);\r\n    z -= Math.floor(z);\r\n    const u = this.fade(x),\r\n      v = this.fade(y),\r\n      w = this.fade(z);\r\n    const A = p[X] + Y, AA = p[A] + Z, AB = p[A + 1] + Z,\r\n      B = p[X + 1] + Y, BA = p[B] + Z, BB = p[B + 1] + Z;\r\n\r\n    return this.lerp(w, this.lerp(v, this.lerp(u, this.grad(p[AA], x, y, z),\r\n      this.grad(p[BA], x - 1, y, z)),\r\n      this.lerp(u, this.grad(p[AB], x, y - 1, z),\r\n        this.grad(p[BB], x - 1, y - 1, z))),\r\n      this.lerp(v, this.lerp(u, this.grad(p[AA + 1], x, y, z - 1),\r\n        this.grad(p[BA + 1], x - 1, y, z - 1)),\r\n        this.lerp(u, this.grad(p[AB + 1], x, y - 1, z - 1),\r\n          this.grad(p[BB + 1], x - 1, y - 1, z - 1))));\r\n  }\r\n  private static fade(t) { return t * t * t * (t * (t * 6 - 15) + 10); }\r\n  private static lerp(t, a, b) { return a + t * (b - a); }\r\n  private static grad(hash, x, y, z) {\r\n    const h = hash & 15;\r\n    const u = h < 8 ? x : y,\r\n      v = h < 4 ? y : h == 12 || h == 14 ? x : z;\r\n    return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\r\n  };\r\n\r\n  private static octaves(x, y, z, p, persistence = 0.5, octaves = 6) {\r\n    let total = 0;\r\n    let frequency = 1;\r\n    let amplitude = 1;\r\n    let maxValue = 0;\r\n    for (let i = 0; i < octaves; i++) {\r\n      total += this.perlin(x * frequency, y * frequency, z * frequency, p) * amplitude;\r\n      maxValue += amplitude;\r\n      amplitude *= persistence;\r\n      frequency *= 2;\r\n    }\r\n    return total / maxValue;\r\n  }\r\n\r\n  public static readonly DefaultP = [151, 160, 137, 91, 90, 15,\r\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\r\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\r\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\r\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\r\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\r\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\r\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\r\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\r\n    129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\r\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\r\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\r\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\r\n\r\n  public static get RandomP(): number[] {\r\n    const array = new Uint8Array(256);\r\n    window.crypto.getRandomValues(array);\r\n    const list = [];\r\n    array.forEach((v) => list.push(v));\r\n    return list;\r\n  }\r\n\r\n  public static Noise(point: Point, factor = 1, p, persistence = 0.5, octaves = 6) {\r\n    return this.octaves(point.X/factor, point.Y/factor, point.Z/factor, p, persistence, octaves);\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'World';\n}\n","<map-tool>\r\n</map-tool>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapToolComponent } from 'src/_component/map-tool/map-tool.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapToolComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}