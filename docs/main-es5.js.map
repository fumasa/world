{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/_component/map-tool/map-tool.component.ts","webpack:///src/_component/map-tool/map-tool.component.html","webpack:///src/_enum/world.biome.ts","webpack:///src/_generator/world.generator.ts","webpack:///src/_model/coordinate.ts","webpack:///src/_model/layer.ts","webpack:///src/_model/point.ts","webpack:///src/_model/vector.ts","webpack:///src/_model/world.info.ts","webpack:///src/_utils/biome.color.ts","webpack:///src/_utils/conversor.ts","webpack:///src/_utils/helper.ts","webpack:///src/_utils/perlin.noise.ts","webpack:///src/_utils/progress.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","MapToolComponent","world","sessionKey","position","zoom","step","jump","stepPoints","toggle","drawSvgMercator","console","log","context","canvas","nativeElement","getContext","projection","svg","width","document","body","clientWidth","height","clientHeight","attr","image","createImageData","renderSvgMercator","data","clearRect","i","byteLength","putImageData","getVectors","layer","element","createElementNS","setAttribute","AsSvgPath","style","stroke","fillOpacity","strokeWidth","appendChild","mercator","renderMercator","onlyShoreline","all","tree","ore","c","x","y","info","GetInformation","FromMercator","color","Get","Biome","Shoreline","cell","Uint8ClampedArray","array","GetAllMercatorPoints","mercatorPoint","ToMercator","coordinate","ToIdxWidth","points","change","selector","templateUrl","styleUrls","WorldBiome","WorldGenerator","seed","useDefault","radius","noise","raw","topology","trees","ores","prepareSeed","DefaultP","RandomP","generateNoise","generateNewNoise","Math","floor","JSON","parse","stringify","length","push","pop","splice","a","b","r","dist_points","onlyTopology","point","ToCardian","factor","trunc","Noise","inspector","ini","Date","count","countLand","ret","end","TruncDecimals","getTime","decPl","DecimalPlaces","longitude","latitude","progress","start","allVectors","check","no","ne","so","se","AddInIfInvertNotExistsAndRemoveItFrom","Transform","stop","copyAllVectors","condensedVectors","vector","inverted","containsIn","filter","v","equals","copyCondensedVectors","layeredPaths","startVector","copy","runner","vectorIdx","findIndex","shrunkenLayeredPaths","forEach","shrunkenLayer","isCollinear","polygon","probePolygon","map","p","addLongitude","probeNearShorepoints","newPoints","beforeCount","newPoint","find","undefined","afterCount","east","eastInfo","shoreline","south","addLatitude","southInfo","west","westInfo","north","northInfo","Coordinate","value","precision","Layer","limit","innerLayers","inside","j","xi","X","yi","Y","xj","yj","intersect","path","idx","sort","DefaultSort","copyInnerLayers","innerLayer","Process","l1","l2","copyVectors","closedCircuits","vectors","shrunk","Point","Z","Vector","A","dot","det","atan2","WorldInfo","deepWater","swallowWater","beach","sandy","grass","woods","forest","mountain","snow","ToDegrees","inner","d","item","itemPoint","variator","BiomeColor","type","Conversor","atan","sqrt","pow","cos","ToRadians","sin","angle","PI","round","RAD2DEG","PI_4","Helper","num","n","toString","charAt","replace","stepX","stepY","action","initx","inity","increment","Perlin","z","u","fade","w","AA","AB","B","BA","BB","lerp","grad","t","hash","h","persistence","octaves","total","frequency","amplitude","maxValue","perlin","Uint8Array","window","crypto","getRandomValues","list","Progress","routes","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { WorldGenerator } from 'src/_generator/world.generator';\r\nimport { BiomeColor } from 'src/_utils/biome.color';\r\nimport { Point } from 'src/_model/point';\r\nimport * as d3 from 'd3';\r\nimport { WorldInfo } from 'src/_model/world.info';\r\nimport { Conversor } from 'src/_utils/conversor';\r\nimport { Vector } from 'src/_model/vector';\r\n\r\ninterface Datum {\r\n  id: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'map-tool',\r\n  templateUrl: './map-tool.component.html',\r\n  styleUrls: ['./map-tool.component.scss']\r\n})\r\nexport class MapToolComponent implements AfterViewInit {\r\n  world: WorldGenerator = new WorldGenerator();\r\n  @ViewChild('canvas', { static: false }) canvas: ElementRef;\r\n  @ViewChild('svg', { static: false }) svg: ElementRef;\r\n  public context: CanvasRenderingContext2D;\r\n\r\n  public sessionKey = 'points';\r\n\r\n  position = new Point(0, 0, 0);\r\n  zoom = 1;\r\n\r\n  step = 20;\r\n  jump = 1.25;\r\n\r\n  stepPoints = 0.2;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // public get Points(): Promise<WorldInfo[]> {\r\n  //   return new Promise<WorldInfo[]>((resolve) => {\r\n  //     if (sessionStorage.getItem(this.sessionKey) === null) {\r\n  //       this.world.GetAllPoints(this.stepPoints).then((p) => {\r\n  //         sessionStorage.setItem(this.sessionKey, JSON.stringify(p));\r\n  //         console.log('new points', p.length);\r\n  //         resolve(p);\r\n  //       });\r\n  //     } else {\r\n  //       resolve(JSON.parse(sessionStorage.getItem(this.sessionKey)));\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // public set Points(points: Promise<WorldInfo[]>) {\r\n  //   points.then((p) => {\r\n  //     sessionStorage.setItem(this.sessionKey, JSON.stringify(p));\r\n  //   });\r\n  // }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    //this.change();\r\n\r\n    //this.drawMercator();\r\n    // this.drawMercatorAlt().then(d => {\r\n    //   console.log('done', d);\r\n    // });\r\n    //this.drawGlobe();\r\n\r\n    this.drawSvgMercator();\r\n\r\n    console.log('done');\r\n  }\r\n\r\n  public toggle = true;\r\n  public change() {\r\n    // if (this.toggle) {\r\n    //   this.drawMercator();\r\n    // } else {\r\n    //   this.drawMercatorAlt().then(d => {\r\n    //     console.log('done', d);\r\n    //   });\r\n    // }\r\n    // this.toggle = !this.toggle;\r\n  }\r\n\r\n  private drawSvgMercator() {\r\n\r\n    this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n    const projection = d3.geoOrthographic();\r\n    const svg = d3.select(this.svg.nativeElement);\r\n\r\n    const width = document.body.clientWidth - 40;\r\n    const height = (document.body.clientHeight - 40);\r\n\r\n    this.canvas.nativeElement.width = width;\r\n    this.canvas.nativeElement.height = height;\r\n\r\n    svg.attr('width', width).attr('height', height);\r\n\r\n    const image = this.context.createImageData(width, height);\r\n\r\n    this.renderSvgMercator(width, height).then(data => {\r\n      this.context.clearRect(0, 0, width, height);\r\n      for (let i = 0; i < data.image.byteLength; i++) {\r\n        image.data[i] = data.image[i];\r\n      }\r\n      this.context.putImageData(image, 0, 0);\r\n\r\n      this.world.getVectors(width, height).then((layer) => {\r\n        const element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n        element.setAttribute('d', layer.AsSvgPath());\r\n        element.style.stroke = '#000';\r\n        element.style.fillOpacity = '.5';\r\n        element.style.strokeWidth = '1px';\r\n\r\n        this.svg.nativeElement.appendChild(element);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  // private drawGlobe() {\r\n  //   this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n  //   const projection = d3.geoOrthographic();\r\n\r\n  //   const width = document.body.clientWidth - 40;\r\n  //   const height = document.body.clientHeight - 40;\r\n\r\n  //   this.canvas.nativeElement.width = width;\r\n  //   this.canvas.nativeElement.height = height;\r\n\r\n  //   const mercator = this.renderMercator(this.context.createImageData(width, height));\r\n\r\n  //   const globe = this.context.createImageData(width, height);\r\n  //   this.renderGlobe(globe, mercator.data, projection);\r\n  //   this.context.clearRect(0, 0, width, height);\r\n  //   this.context.putImageData(globe, 0, 0);\r\n\r\n  //   document.onmousemove = (event) => {\r\n  //     var p = [event.clientX, event.clientY];\r\n  //     const λM = d3.scaleLinear().domain([0, width]).range([-180, 180]);\r\n  //     const φM = d3.scaleLinear().domain([0, height]).range([90, -90]);\r\n\r\n  //     projection.rotate([λM(p[0]), φM(p[1])]);\r\n\r\n  //     this.renderGlobe(globe, mercator.data, projection);\r\n\r\n  //     this.context.clearRect(0, 0, width, height);\r\n  //     this.context.putImageData(globe, 0, 0);\r\n  //   };\r\n  // }\r\n\r\n  private drawMercator() {\r\n    this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n    const projection = d3.geoOrthographic();\r\n\r\n    const width = document.body.clientWidth - 40;\r\n    const height = document.body.clientHeight - 40;\r\n\r\n    this.canvas.nativeElement.width = width;\r\n    this.canvas.nativeElement.height = height;\r\n\r\n    const mercator = this.renderMercator(this.context.createImageData(width, height));\r\n\r\n    this.context.clearRect(0, 0, width, height);\r\n    this.context.putImageData(mercator, 0, 0);\r\n  }\r\n\r\n  private renderMercator(image: ImageData, onlyShoreline = false) {\r\n    const data = image.data;\r\n    const width = image.width;\r\n    const height = image.height;\r\n    let all = 0;\r\n    let tree = 0;\r\n    let ore = 0;\r\n    let c = 0;\r\n\r\n    for (var x = 0; x < width; x++) {\r\n      for (var y = 0; y < height; y++) {\r\n        let info = this.world.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), this.zoom);\r\n        let color = BiomeColor.Get(info.Biome);\r\n\r\n        if (onlyShoreline) {\r\n          if (info.Shoreline) {\r\n            color = [0, 0, 0, 255];\r\n            c++;\r\n          } else {\r\n            color = [255, 255, 255, 255];\r\n          }\r\n        }\r\n\r\n        let cell = (x + y * width) * 4;\r\n\r\n        data[cell] = color[0];\r\n        data[cell + 1] = color[1];\r\n        data[cell + 2] = color[2];\r\n        data[cell + 3] = color[3];\r\n\r\n        all++;\r\n      }\r\n    }\r\n    console.log(`info all:${all} tree:${tree} ore:${ore} ${width}x${height} ${c}`);\r\n\r\n    return image;\r\n  }\r\n\r\n  private renderMercator2(width: number, height: number) {\r\n    let all = 0;\r\n\r\n    const data: Uint8ClampedArray = new Uint8ClampedArray(width * height * 4);\r\n\r\n    for (var x = 0; x < width; x++) {\r\n      for (var y = 0; y < height; y++) {\r\n        let info = this.world.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), this.zoom);\r\n        let color = BiomeColor.Get(info.Biome);\r\n\r\n        let cell = (x + y * width) * 4;\r\n\r\n        data[cell] = color[0];\r\n        data[cell + 1] = color[1];\r\n        data[cell + 2] = color[2];\r\n        data[cell + 3] = color[3];\r\n\r\n        all++;\r\n      }\r\n    }\r\n    console.log(`alt info all:${all} ${width}x${height}`);\r\n\r\n    return data;\r\n  }\r\n\r\n  // private async drawMercatorAlt() {\r\n  //   this.context = (<HTMLCanvasElement>this.canvas.nativeElement).getContext('2d');\r\n  //   const projection = d3.geoOrthographic();\r\n\r\n  //   const width = document.body.clientWidth - 40;\r\n  //   const height = document.body.clientHeight - 40;\r\n\r\n  //   this.canvas.nativeElement.width = width;\r\n  //   this.canvas.nativeElement.height = height;\r\n\r\n  //   const mercator = await this.renderMercatorAlt(this.context.createImageData(width, height));\r\n\r\n  //   this.context.clearRect(0, 0, width, height);\r\n  //   this.context.putImageData(mercator, 0, 0);\r\n  // }\r\n\r\n  // private renderMercatorAlt(image: ImageData): Promise<ImageData> {\r\n  //   return new Promise<ImageData>((resolve) => {\r\n  //     const data = image.data;\r\n  //     const width = image.width;\r\n  //     const height = image.height;\r\n  //     let all = 0;\r\n  //     let tree = 0;\r\n  //     let ore = 0;\r\n\r\n  //     const stepX = width * this.stepPoints / 360;\r\n  //     const stepY = height * this.stepPoints / 180;\r\n\r\n  //     const sizeX = stepX * (360 / this.stepPoints);\r\n  //     const sizeY = stepY * (180 / this.stepPoints);\r\n\r\n  //     this.world.GetAllPoints(this.stepPoints).then((points) => {\r\n  //       console.log('length', points.length, width, height, width*height, `x ${sizeX} ${stepX} ${360 / this.stepPoints}`, `y ${sizeY} ${stepY} ${180 / this.stepPoints}`);\r\n\r\n  //       for (var x = 0; x < width; x++) {\r\n  //         for (var y = 0; y < height; y++) {\r\n  //           let idx = Helper.IdxMatrixToVector(new Point(x, y, 0), width, stepX, stepY);\r\n\r\n  //           let info = points[idx];\r\n\r\n  //           // if (x % 100 === 0)\r\n  //           //   console.log('trouble2', x, y, idx, info);\r\n\r\n  //           let color = BiomeColor.Get(info.Biome);\r\n\r\n  //           // if (info.Biome === WorldBiome.beach) {\r\n  //           //   color = [0, 0, 0, 255];\r\n  //           // } else {\r\n  //           //   color = [255, 255, 255, 255];\r\n  //           // }\r\n\r\n  //           let cell = (x + y * image.width) * 4;\r\n\r\n  //           data[cell] = color[0];\r\n  //           data[cell + 1] = color[1];\r\n  //           data[cell + 2] = color[2];\r\n  //           data[cell + 3] = color[3];\r\n\r\n  //           all++;\r\n  //         }\r\n  //       }\r\n\r\n  //       console.log(`info all:${all} tree:${tree} ore:${ore} ${width}x${height}`);\r\n  //       resolve(image);\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  private renderSvgMercator(width: number, height: number, onlyShoreline = false) {\r\n    return new Promise<{ world: WorldInfo[], image: Uint8ClampedArray }>((resolve) => {\r\n      let all = 0;\r\n      let tree = 0;\r\n      let ore = 0;\r\n      let c = 0;\r\n      const array: Uint8ClampedArray = new Uint8ClampedArray(width * height * 4);\r\n\r\n      this.world.GetAllMercatorPoints(width, height, (info) => {\r\n        let color = BiomeColor.Get(info.Biome);\r\n\r\n        if (onlyShoreline) {\r\n          if (info.Shoreline) {\r\n            color = [0, 0, 0, 255];\r\n            c++;\r\n          } else {\r\n            color = [255, 255, 255, 255];\r\n          }\r\n        }\r\n\r\n        let mercatorPoint = Conversor.ToMercator(info.coordinate, width, height);\r\n        let cell = Conversor.ToIdxWidth(mercatorPoint, width) * 4;\r\n\r\n        array[cell] = color[0];\r\n        array[cell + 1] = color[1];\r\n        array[cell + 2] = color[2];\r\n        array[cell + 3] = color[3];\r\n\r\n        all++;\r\n\r\n      }).then((points) => {\r\n        console.log(`info svg all:${all} tree:${tree} ore:${ore} ${width}x${height} ${c}`);\r\n        resolve({ world: points, image: array });\r\n      });\r\n    });\r\n  }\r\n\r\n  // private renderGlobe(image: ImageData, mercatorData: Uint8ClampedArray, projection = d3.geoOrthographic()) {\r\n  //   const width = image.width;\r\n  //   const height = image.height;\r\n  //   const data = image.data;\r\n\r\n  //   for (var y = 0, i = -1; y < height; ++y) {\r\n  //     for (var x = 0; x < width; ++x) {\r\n  //       var p = projection.invert([x, y]), λ = p[0], φ = p[1];\r\n  //       if (λ > 180 || λ < -180 || φ > 90 || φ < -90) {\r\n  //         i += 4;\r\n  //         continue;\r\n  //       }\r\n  //       var q = ((90 - φ) / 180 * height | 0) * width + ((180 + λ) / 360 * width | 0) << 2;\r\n  //       data[++i] = mercatorData[q];\r\n  //       data[++i] = mercatorData[++q];\r\n  //       data[++i] = mercatorData[++q];\r\n  //       data[++i] = 255;\r\n  //     }\r\n  //   }\r\n\r\n  //   return image;\r\n  // }\r\n\r\n  // private getShorelines(width: number, height: number): WorldInfo[][] {\r\n  //   const points: WorldInfo[][] = [];\r\n\r\n  //   for (var x = 0; x < width; x++) {\r\n  //     for (var y = 0; y < height; y++) {\r\n  //       let info = this.world.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), this.zoom);\r\n  //       if (info.Shoreline) {\r\n  //         if (points[x] === undefined) points[x] = [];\r\n  //         points[x][y] = info;\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   const all = WorldInfo.AllInOne(points);\r\n\r\n  //   const polygonPoints: WorldInfo[][] = [];\r\n\r\n  //   // while (points.length > 0) {\r\n  //   const polygon: WorldInfo[] = [];\r\n  //   let current: WorldInfo = null;\r\n\r\n  //   const first: WorldInfo = all[0];\r\n\r\n  //   console.log('first', first);\r\n  //   WorldInfo.RemoveOne(points, first, width, height);\r\n  //   polygon.push(first);\r\n\r\n  //   while (first !== current) {\r\n  //     const actualPoint = Conversor.ToMercator((current ?? first).coordinate, width, height);\r\n  //     const allnear = WorldInfo.GetAllNear(all, actualPoint, width, height);\r\n  //     console.log('all near', allnear);\r\n\r\n  //     // const nearNewPoints = allnear.filter((n: WorldInfo) => polygon.includes((p: WorldInfo) => (p.coordinate.longitude === n.coordinate.longitude && p.coordinate.latitude === n.coordinate.latitude)));\r\n\r\n  //     const nearNewPoints = [];\r\n  //     allnear.forEach((n) => {\r\n  //       let exists = false;\r\n  //       polygon.forEach((p) => {\r\n  //         if (p.coordinate.longitude === n.coordinate.longitude && p.coordinate.latitude === n.coordinate.latitude) {\r\n  //           exists = true;\r\n  //           return;\r\n  //         }\r\n  //       });\r\n  //       if (!exists) {\r\n  //         nearNewPoints.push(n);\r\n  //       }\r\n  //     });\r\n\r\n\r\n  //     const nearNewPoint = nearNewPoints.sort((a: WorldInfo, b: WorldInfo) => {\r\n  //       return (Helper.Pitagoras(Conversor.ToMercator(a.coordinate, width, height), actualPoint) <= Helper.Pitagoras(Conversor.ToMercator(b.coordinate, width, height), actualPoint)) ? 1 : -1;\r\n  //     })[0];\r\n\r\n  //     console.log('near', nearNewPoints, nearNewPoint);\r\n  //     WorldInfo.RemoveOne(points, nearNewPoint, width, height);\r\n  //     polygon.push(nearNewPoint);\r\n  //     current = nearNewPoint;\r\n\r\n  //   }\r\n  //   console.log('polygon', polygon);\r\n  //   polygonPoints.push(polygon);\r\n  //   // }\r\n\r\n  //   return polygonPoints;\r\n  // }\r\n}","<div class='centerbox'>\r\n  <canvas #canvas (click)=\"change()\"></canvas>\r\n  <svg #svg></svg>\r\n</div>","export enum WorldBiome {\r\n  deepWater,\r\n  swallowWater,\r\n  shoreline,\r\n  beach,\r\n  sandy,\r\n  grass,\r\n  woods,\r\n  forest,\r\n  mountain,\r\n  snow\r\n}","import { WorldInfo } from 'src/_model/world.info';\r\nimport { Point } from 'src/_model/point';\r\nimport { Perlin } from '../_utils/perlin.noise';\r\nimport { Coordinate } from 'src/_model/coordinate';\r\nimport { Conversor } from 'src/_utils/conversor';\r\nimport { WorldBiome } from 'src/_enum/world.biome';\r\nimport { Helper } from 'src/_utils/helper';\r\nimport { Vector } from 'src/_model/vector';\r\nimport { Layer } from 'src/_model/layer';\r\nimport { Progress } from 'src/_utils/progress';\r\n\r\nexport class WorldGenerator {\r\n  private noise = { raw: [], topology: [], trees: [], ores: [] };\r\n  constructor(public seed = 8, useDefault = true, public radius = 5000) {\r\n    this.prepareSeed(seed);\r\n    this.noise.raw = useDefault ? Perlin.DefaultP : Perlin.RandomP;\r\n    this.noise.topology = this.generateNoise(this.noise.raw, seed);\r\n    this.noise.trees = this.generateNoise(this.generateNewNoise(), seed);\r\n    this.noise.ores = this.generateNoise(this.generateNewNoise(2), seed);\r\n  }\r\n\r\n  private prepareSeed(seed) {\r\n    if (seed > 0 && seed < 1) {\r\n      seed *= 65536;\r\n    }\r\n    seed = Math.floor(seed);\r\n    if (seed < 256) {\r\n      seed |= seed << 8;\r\n    }\r\n  }\r\n\r\n  private generateNoise(array, seed) {\r\n    const data = [];\r\n    for (let i = 0; i < 256; i++) {\r\n      if (i & 1) {\r\n        data[i] = data[i + 256] = array[i] ^ (seed & 255);\r\n      }\r\n      else {\r\n        data[i] = data[i + 256] = array[i] ^ ((seed >> 8) & 255);\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  private generateNewNoise(jump = 1) {\r\n    const data: [] = JSON.parse(JSON.stringify(this.noise.raw));\r\n    const noise = [];\r\n    while (data.length > 0) {\r\n      if (data.length <= jump)\r\n        noise.push(data.pop());\r\n      else\r\n        noise.push(data.splice(jump, 1));\r\n    }\r\n    return noise;\r\n  }\r\n\r\n  private cicle_gradient(a, b, x, y, r) {\r\n    var dist_points = (a - x) * (a - x) + (b - y) * (b - y);\r\n    r *= r;\r\n    return dist_points < r ? (((dist_points * 100 / r) - 100) * -1) / 100 : 0;\r\n  }\r\n\r\n  public GetInformation(coordinate: Coordinate, zoom = 1, onlyTopology: boolean = false) {\r\n    if (!(coordinate.radius != null)) {\r\n      coordinate.radius = zoom;\r\n    }\r\n    var point = Conversor.ToCardian(coordinate);\r\n    const factor = zoom;//this.radius * zoom;\r\n    const topology = Math.trunc((Perlin.Noise(point, factor, this.noise.topology, 0.68) + 0.5) * 100) / 100;\r\n    let trees = null;\r\n    let ores = null;\r\n    if (!onlyTopology) {\r\n      trees = Math.trunc((Perlin.Noise(point, factor * 100, this.noise.trees, 0.68) + 0.5) * 100) / 100;\r\n      ores = Math.trunc((Perlin.Noise(point, factor * 100, this.noise.ores, 0.68) + 0.5) * 100) / 100;\r\n    }\r\n    return new WorldInfo(topology, trees, ores, coordinate, point);\r\n  }\r\n\r\n  public GetAllMercatorPoints(width: number, height: number, inspector: (a: WorldInfo) => void = null): Promise<WorldInfo[]> {\r\n    return new Promise<WorldInfo[]>((resolve) => {\r\n      const ini = new Date();\r\n      let count = 0;\r\n      let countLand = 0;\r\n      const ret: WorldInfo[] = [];\r\n      for (let x = 0; x < width; x++) {\r\n        for (let y = 0; y < height; y++) {\r\n          const info = this.GetInformation(Conversor.FromMercator(new Point(x, y, 0), width, height), 1);\r\n          if (info.topology >= 0.5) countLand++;\r\n          if (inspector !== null) {\r\n            inspector(info);\r\n          }\r\n          ret.push(info);\r\n          count++;\r\n        }\r\n      }\r\n      const end = new Date();\r\n      console.log(`duration ${Helper.TruncDecimals(end.getTime() / 1000 - ini.getTime() / 1000, 3)}s with count: ${count} ${countLand}`);\r\n      resolve(ret);\r\n    });\r\n  }\r\n\r\n  public GetAllPoints(step = 0.0001): Promise<WorldInfo[]> {\r\n    return new Promise<WorldInfo[]>((resolve) => {\r\n      const ini = new Date();\r\n      let count = 0;\r\n      const decPl = Helper.DecimalPlaces(step);\r\n      console.log('decimal', decPl, step);\r\n      const ret: WorldInfo[] = [];\r\n      for (let longitude = -90; longitude <= 90; longitude += step) {\r\n        for (let latitude = -180; latitude <= 180; latitude += step) {\r\n          ret.push(this.GetInformation(new Coordinate(Helper.TruncDecimals(longitude, decPl), Helper.TruncDecimals(latitude, decPl)), 1, true));\r\n          count++;\r\n        }\r\n      }\r\n      const end = new Date();\r\n      console.log(`duration ${Helper.TruncDecimals(end.getTime() / 1000 - ini.getTime() / 1000, 3)}s with count: ${count}`);\r\n      resolve(ret);\r\n    });\r\n  }\r\n\r\n  public getVectors(width: number, height: number): Promise<Layer> {\r\n    const progress = new Progress(width*height);\r\n    return new Promise<Layer>(resolve => {\r\n      progress.start();\r\n      const allVectors: Vector[] = [];\r\n      for (var x = 0; x < width - 1; x++) {\r\n        for (var y = 0; y < height - 1; y++) {\r\n          progress.check();\r\n          const no = new Point(x, y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(no, width, height), 1).topology < 0.5) continue;\r\n          const ne = new Point((1 + x), y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(ne, width, height), 1).topology < 0.5) continue;\r\n          const so = new Point(x, (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(so, width, height), 1).topology < 0.5) continue;\r\n          const se = new Point((1 + x), (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(se, width, height), 1).topology < 0.5) continue;\r\n\r\n          Vector.AddInIfInvertNotExistsAndRemoveItFrom(allVectors, new Vector(no, ne));\r\n          Vector.AddInIfInvertNotExistsAndRemoveItFrom(allVectors, new Vector(ne, se));\r\n          Vector.AddInIfInvertNotExistsAndRemoveItFrom(allVectors, new Vector(se, so));\r\n          Vector.AddInIfInvertNotExistsAndRemoveItFrom(allVectors, new Vector(so, no));\r\n        }\r\n      }\r\n      const layer = Layer.Transform(allVectors);\r\n      progress.stop();\r\n      resolve(layer);\r\n    });\r\n  }\r\n\r\n  public getSvg(width: number, height: number): Promise<Vector[][]> {\r\n    return new Promise<Vector[][]>(resolve => {\r\n      console.log('start', width, height, new Date());\r\n      const allVectors: Vector[] = [];\r\n      let count = 0;\r\n      for (var x = 0; x < width - 1; x++) {\r\n        for (var y = 0; y < height - 1; y++) {\r\n          const no = new Point(x, y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(no, width, height), 1).topology < 0.5) continue;\r\n          const ne = new Point((1 + x), y, 0);\r\n          if (this.GetInformation(Conversor.FromMercator(ne, width, height), 1).topology < 0.5) continue;\r\n          const so = new Point(x, (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(so, width, height), 1).topology < 0.5) continue;\r\n          const se = new Point((1 + x), (1 + y), 0);\r\n          if (this.GetInformation(Conversor.FromMercator(se, width, height), 1).topology < 0.5) continue;\r\n\r\n          allVectors.push(new Vector(no, ne));\r\n          allVectors.push(new Vector(ne, se));\r\n          allVectors.push(new Vector(se, so));\r\n          allVectors.push(new Vector(so, no));\r\n\r\n          count++;\r\n        }\r\n      }\r\n      console.log('allVectors', count, allVectors.length, new Date());\r\n      let copyAllVectors = [...allVectors];\r\n      const condensedVectors: Vector[] = [];\r\n      while (copyAllVectors.length > 0) {\r\n        const vector = copyAllVectors.pop();\r\n        if (!vector.inverted.containsIn(copyAllVectors)) {\r\n          condensedVectors.push(vector);\r\n        } else {\r\n          copyAllVectors = copyAllVectors.filter((v) => !v.equals(vector.inverted));\r\n        }\r\n      }\r\n      console.log('condensedVectors', condensedVectors.length, new Date());\r\n      let copyCondensedVectors = [...condensedVectors];\r\n      const layeredPaths: Vector[][] = [];\r\n      while (copyCondensedVectors.length > 0) {\r\n        const layer: Vector[] = [];\r\n        const startVector = copyCondensedVectors.pop();\r\n        layer.push(startVector.copy);\r\n        let runner = startVector.copy;\r\n        while (!runner.end.equals(startVector.start)) {\r\n          const vectorIdx = copyCondensedVectors.findIndex((v) => runner.end.equals(v.start));\r\n          runner = copyCondensedVectors.splice(vectorIdx, 1)[0];\r\n          layer.push(runner.copy);\r\n        }\r\n        layeredPaths.push(layer);\r\n      }\r\n      console.log('layeredPaths', layeredPaths.length, new Date());\r\n      const shrunkenLayeredPaths: Vector[][] = [];\r\n      layeredPaths.forEach((layer) => {\r\n        const shrunkenLayer: Vector[] = [];\r\n        let runner: Vector = layer[0].copy;\r\n        for (let i = 1; i < layer.length; i++) {\r\n          if (runner.isCollinear(layer[i].end)) {\r\n            runner = new Vector(runner.start, layer[i].end);\r\n          } else {\r\n            shrunkenLayer.push(runner.copy);\r\n            runner = layer[i].copy;\r\n          }\r\n        }\r\n        shrunkenLayer.push(runner.copy);\r\n        shrunkenLayeredPaths.push(shrunkenLayer);\r\n      });\r\n      console.log('shrunkenLayeredPaths', shrunkenLayeredPaths.length, new Date());\r\n      resolve(shrunkenLayeredPaths);\r\n    });\r\n  }\r\n\r\n  public GetShorlines(step = 0.0001): WorldInfo[][] {\r\n    const ret: WorldInfo[][] = [];\r\n    const coordinate = new Coordinate(0, 0);\r\n    const polygon: Coordinate[] = this.probePolygon(coordinate, step);\r\n    ret.push(polygon.map((p) => this.GetInformation(p)));\r\n    return ret;\r\n  }\r\n\r\n  private probePolygon(coordinate = new Coordinate(0, 0), step = 0.0001): Coordinate[] {\r\n    const polygon: Coordinate[] = [];\r\n    let points: Coordinate[] = [];\r\n    do {\r\n      coordinate = coordinate.addLongitude(step);\r\n      points = this.probeNearShorepoints(coordinate, step);\r\n    } while (points === [])\r\n\r\n    while (points.length !== 0) {\r\n      const newPoints = [];\r\n      points.forEach((point: Coordinate) => {\r\n        // const point = points[0];\r\n        polygon.push(point);\r\n        console.log('point', point, polygon.length);\r\n        newPoints.push(...this.probeNearShorepoints(point, step));\r\n      });\r\n      const beforeCount = newPoints.length;\r\n      points = newPoints.filter((newPoint: Coordinate) => polygon.find((p: Coordinate) => p.latitude === newPoint.latitude && p.longitude === newPoint.longitude) === undefined);\r\n      const afterCount = points.length;\r\n      if (afterCount === beforeCount) {\r\n        console.log('problema', afterCount, beforeCount);\r\n      } else if (afterCount > beforeCount) {\r\n        console.log('mais problema ainda', afterCount, beforeCount);\r\n      } else {\r\n        console.log('ok', afterCount, beforeCount);\r\n      }\r\n    }\r\n\r\n    console.log('finito', polygon);\r\n\r\n    return polygon;\r\n  }\r\n\r\n  private probeNearShorepoints(coordinate: Coordinate, step = 0.0001): Coordinate[] {\r\n    const points: Coordinate[] = [];\r\n    const east = coordinate.addLongitude(step);\r\n    const eastInfo = this.GetInformation(east, 1, true);\r\n    if (eastInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('east', east, eastInfo);\r\n      points.push(east);\r\n    }\r\n    const south = coordinate.addLatitude(step);\r\n    const southInfo = this.GetInformation(south, 1, true);\r\n    if (southInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('south', south, southInfo);\r\n      points.push(south);\r\n    }\r\n    const west = coordinate.addLongitude(-step);\r\n    const westInfo = this.GetInformation(west, 1, true);\r\n    if (westInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('west', west, westInfo);\r\n      points.push(west);\r\n    }\r\n    const north = coordinate.addLatitude(-step);\r\n    const northInfo = this.GetInformation(north, 1, true);\r\n    if (northInfo.Biome === WorldBiome.shoreline) {\r\n      // console.log('north', north, northInfo);\r\n      points.push(north);\r\n    }\r\n    return points;\r\n  }\r\n}","import { Helper } from 'src/_utils/helper';\r\n\r\nexport class Coordinate {\r\n  constructor(public latitude: number, public longitude: number, public radius?: number) { }\r\n\r\n  public addLatitude(value: number, precision = 4) {\r\n    return new Coordinate(Helper.TruncDecimals(this.latitude + value, precision), this.longitude);\r\n  }\r\n  public addLongitude(value: number, precision = 4) {\r\n    return new Coordinate(this.latitude, Helper.TruncDecimals(this.longitude + value, precision));\r\n  }\r\n}","import { Point } from \"./point\";\nimport { Vector } from \"./vector\";\n\nexport class Layer {\n  constructor(public limit: Vector[] = [], public innerLayers: Layer[] = []) { }\n\n  public shrunk(): Layer {\n    const layer = [...this.limit];\n    const array = [];\n    let runner: Vector = layer[0].copy;\n    for (let i = 1; i < layer.length; i++) {\n      if (runner.isCollinear(layer[i].end)) {\n        runner = new Vector(runner.start, layer[i].end);\n      } else {\n        array.push(runner.copy);\n        runner = layer[i].copy;\n      }\n    }\n    array.push(runner.copy);\n    return new Layer(array, this.innerLayers);\n  }\n\n  public inside(point: Point) {\n    let inside = false;\n    for (let i = 0, j = this.limit.length - 1; i < this.limit.length; j = i++) {\n      const xi = this.limit[i].start.X, yi = this.limit[i].start.Y;\n      const xj = this.limit[j].start.X, yj = this.limit[j].start.Y;\n\n      const intersect = ((yi > point.Y) != (yj > point.Y)) && (point.X < (xj - xi) * (point.Y - yi) / (yj - yi) + xi);\n      if (intersect) inside = !inside;\n    }\n    return inside;\n  }\n\n  public static DefaultSort(l1: Layer, l2: Layer): number {\n    if (l1.limit.length > l2.limit.length)\n      return 1;\n    if (l1.limit.length < l2.limit.length)\n      return -1\n    return 0;\n  }\n\n  public AsSvgPath(): string {\n    let path = '';\n    if (this.limit.length > 0) {\n      path = 'M ';\n      this.limit.forEach((vector, idx) => {\n        path += `${idx > 0 ? 'L ' : ''}${vector.start.X} ${vector.start.Y} `;\n      });\n      path += `Z `;\n    }\n    this.innerLayers.forEach(layer => {\n      path += layer.AsSvgPath();\n    });\n    return path;\n  }\n\n  public static Transform(allVectors: Vector[]): Layer {\n    const copyVectors = [ ...allVectors ];\n    const closedCircuits: Layer[] = [];\n      while (copyVectors.length > 0) {\n        const vectors: Vector[] = [];\n        const startVector = copyVectors.pop();\n        vectors.push(startVector.copy);\n        let runner = startVector.copy;\n        while (!runner.end.equals(startVector.start)) {\n          const vectorIdx = copyVectors.findIndex((v) => runner.end.equals(v.start));\n          runner = copyVectors.splice(vectorIdx, 1)[0];\n          vectors.push(runner.copy);\n        }\n        closedCircuits.push(new Layer(vectors).shrunk());\n      }\n      //console.log('closedCircuits', closedCircuits.length, new Date());\n      const layer = new Layer();\n      layer.innerLayers = closedCircuits;\n      layer.Process();\n      return layer;\n  }\n\n  public Process() {\n    this.innerLayers.sort(Layer.DefaultSort);\n    const copyInnerLayers = [...this.innerLayers];\n    for (let i = 0; i < copyInnerLayers.length; i++) {\n      for (let j = this.innerLayers.length - 1; j > 0; j--) {\n        if (i !== j) {\n          if (copyInnerLayers[i].inside(this.innerLayers[j].limit[0].start)) {\n            const innerLayer = this.innerLayers.splice(j, 1)[0];\n            copyInnerLayers[i].innerLayers.push(innerLayer);\n          }\n        }\n      }\n    }\n    for (let i = 0; i < copyInnerLayers.length; i++) {\n      if (copyInnerLayers[i].innerLayers.length > 0) {\n        copyInnerLayers[i].Process();\n      }\n    }\n  }\n}","import { Vector } from \"./vector\";\r\n\r\nexport class Point {\r\n  constructor(public X: number, public Y: number, public Z: number) { }\r\n\r\n  public equals(point: Point): boolean {\r\n    return (this.X === point.X && this.Y === point.Y && this.Z === point.Z);\r\n  }\r\n}","import { Point } from \"./point\";\n\nexport class Vector {\n  constructor(public start: Point, public end: Point) { }\n\n  public get inverted(): Vector {\n    return new Vector(this.end, this.start);\n  }\n\n  public get copy(): Vector {\n    return new Vector(this.start, this.end);\n  }\n\n  public containsIn(array: Vector[]): boolean {\n    for (let i = 0; i < array.length; i++) {\n      if ((array[i].start.equals(this.start)) && (array[i].end.equals(this.end))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public isCollinear(a: Point): boolean {\n    const A = this.start.X * (this.end.Y - a.Y) + this.end.X * (a.Y - this.start.Y) + a.X * (this.start.Y - this.end.Y);\n    return A === 0;\n  }\n\n  public isClockwise(vector: Vector): boolean {\n    const dot = (this.end.X - this.start.X)*(vector.end.X - vector.start.X) + (this.end.Y - this.start.Y)*(vector.end.Y - vector.start.Y);\n    const det = (this.end.X - this.start.X)*(vector.end.Y - vector.start.Y) - (this.end.Y - this.start.Y)*(vector.end.X - vector.start.X);\n    return Math.atan2(det, dot) > 0;\n  }\n\n  public equals(vector: Vector): boolean {\n    return (this.start.equals(vector.start) && this.end.equals(vector.end));\n  }\n\n  public static AddInIfInvertNotExistsAndRemoveItFrom(vectors: Vector[], vector: Vector): Vector[] {\n    const vectorIdx = vectors.findIndex((v) => vector.inverted.equals(v));\n    if (vectorIdx > -1) {\n      vectors.splice(vectorIdx, 1);\n    } else {\n      vectors.push(vector);\n    }\n    return vectors;\n  }\n}","import { WorldBiome } from 'src/_enum/world.biome';\r\nimport { Point } from 'src/_model/point';\r\nimport { Coordinate } from 'src/_model/coordinate';\r\nimport { Conversor } from 'src/_utils/conversor';\r\n\r\nexport class WorldInfo {\r\n  public constructor(public topology: number, public trees: number, public ores: number, public coordinate: Coordinate, public point: Point) { }\r\n\r\n  public get Biome(): WorldBiome {\r\n    if (this.topology < 0.35) {\r\n      return WorldBiome.deepWater;\r\n    } else if (this.topology < 0.50) {\r\n      return WorldBiome.swallowWater;\r\n    } else if (this.topology === 0.50) {\r\n      return WorldBiome.shoreline;\r\n    } else if (this.topology < 0.53) {\r\n      return WorldBiome.beach;\r\n    } else if (this.topology < 0.56) {\r\n      return WorldBiome.sandy;\r\n    } else if (this.topology < 0.62) {\r\n      return WorldBiome.grass;\r\n    } else if (this.topology < 0.70) {\r\n      return WorldBiome.woods;\r\n    } else if (this.topology < 0.75) {\r\n      return WorldBiome.forest;\r\n    } else if (this.topology < 0.80) {\r\n      return WorldBiome.mountain;\r\n    } else if (this.topology < 0.90) {\r\n      return WorldBiome.snow;\r\n    }\r\n  };\r\n\r\n  public get Shoreline(): boolean {\r\n    return this.topology === 0.50;\r\n  }\r\n\r\n  public get Tree(): boolean {\r\n    return (this.trees < 0.20) && this.Biome == WorldBiome.grass;\r\n  }\r\n\r\n  public get Ore(): boolean {\r\n    return (this.ores < 0.25);\r\n  }\r\n\r\n  public get LatitudeLine(): boolean {\r\n    return (Conversor.ToDegrees(this.coordinate.latitude) % 10 === 0);\r\n  }\r\n\r\n  public get LongitudeLine(): boolean {\r\n    return (Conversor.ToDegrees(this.coordinate.longitude) % 10 === 0);\r\n  }\r\n\r\n  public static AllInOne(data: any[][]): any[] {\r\n    const ret = [];\r\n    data.forEach((inner) => inner.forEach(d => {\r\n      if (d !== null) {\r\n        ret.push(d);\r\n      }\r\n    }))\r\n    return ret;\r\n  }\r\n\r\n  public static RemoveOne(points: WorldInfo[][], item: WorldInfo, width: number, height: number): void {\r\n    const itemPoint = Conversor.ToMercator(item.coordinate, width, height);\r\n    points[itemPoint.X].splice(itemPoint.Y, 1);\r\n  }\r\n\r\n  public static GetAllNear(points: WorldInfo[], point: Point, width: number, height: number): WorldInfo[] {\r\n    const variator = 2;\r\n    return points.filter((p: WorldInfo) => {\r\n      const itemPoint = Conversor.ToMercator(p.coordinate, width, height);\r\n      return (itemPoint.X >= point.X - variator && itemPoint.X <= point.X + variator) &&\r\n        (itemPoint.Y >= point.Y - variator && itemPoint.Y <= point.Y + variator) &&\r\n        (itemPoint.Z >= point.Z - variator && itemPoint.Z <= point.Z + variator);\r\n    });\r\n  }\r\n}","import { WorldBiome } from 'src/_enum/world.biome';\r\n\r\nexport class BiomeColor {\r\n  static swallowWater = [0, 191, 255, 255];\r\n  static deepWater = [65, 105, 225, 255];\r\n  static grass = [50, 205, 50, 255];\r\n  static woods = [34, 139, 34, 255];\r\n  static forest = [0, 100, 0, 255];\r\n  static sandy = [210, 180, 140, 255];\r\n  static beach = [238, 214, 175, 255];\r\n  static mountain = [139, 137, 137, 255];\r\n  static snow = [255, 250, 250, 255];\r\n\r\n  public static Get(type: WorldBiome) {\r\n    switch (type) {\r\n      case WorldBiome.deepWater:\r\n        return this.deepWater;\r\n      case WorldBiome.swallowWater:\r\n        return this.swallowWater;\r\n      case WorldBiome.woods:\r\n        return this.woods;\r\n      case WorldBiome.forest:\r\n        return this.forest;\r\n      case WorldBiome.sandy:\r\n        return this.sandy;\r\n      case WorldBiome.beach:\r\n        return this.beach;\r\n      case WorldBiome.mountain:\r\n        return this.mountain;\r\n      case WorldBiome.snow:\r\n        return this.snow;\r\n      default:\r\n      case WorldBiome.grass:\r\n        return this.grass;\r\n    }\r\n  }\r\n}","import { Coordinate } from 'src/_model/coordinate';\r\nimport { Point } from 'src/_model/point';\r\n\r\nexport class Conversor {\r\n  public static ToPolar(point: Point): Coordinate {\r\n    return new Coordinate(\r\n      Math.atan(point.Y / point.Z),\r\n      Math.atan(Math.sqrt(Math.pow(point.X, 2) + Math.pow(point.Y, 2) / point.Z)),\r\n      Math.sqrt(Math.pow(point.X, 2) + Math.pow(point.Y, 2) + Math.pow(point.Z, 2)));\r\n  }\r\n  public static ToCardian(coordinate: Coordinate): Point {\r\n    return new Point(\r\n      coordinate.radius * Math.cos(Conversor.ToRadians(coordinate.longitude)) * Math.cos(Conversor.ToRadians(coordinate.latitude)),\r\n      coordinate.radius * Math.sin(Conversor.ToRadians(coordinate.longitude)) * Math.cos(Conversor.ToRadians(coordinate.latitude)),\r\n      coordinate.radius * Math.sin(Conversor.ToRadians(coordinate.latitude)));\r\n  }\r\n  public static ToDegrees(angle: number): number {\r\n    return angle * (180 / Math.PI);\r\n  }\r\n  public static ToRadians(angle: number): number {\r\n    return angle * (Math.PI / 180);\r\n  }\r\n\r\n  public static ToMercator(coordinate: Coordinate, width: number, height: number): Point {\r\n    return new Point(Math.round((coordinate.longitude + 180)/(360 / width)), Math.round((coordinate.latitude + 90)/(180 / height)), 0);\r\n  }\r\n\r\n  public static FromMercator(point: Point, width: number, height: number): Coordinate {\r\n    return new Coordinate((point.Y * (180 / height)) - 90, (point.X * (360 / width)) - 180);\r\n  }\r\n\r\n  public static ToIdxWidth(point: Point, width: number): number {\r\n    return (point.X + (point.Y) * width);\r\n  }\r\n}\r\n\r\nexport const RAD2DEG = 180 / Math.PI;\r\nexport const PI_4 = Math.PI / 4;","import { Point } from 'src/_model/point';\r\n\r\nexport class Helper {\r\n  public static TruncDecimals(num: number, precision = 4): number {\r\n    return Math.trunc(Math.pow(10, precision) * num)/Math.pow(10, precision);\r\n  }\r\n\r\n  public static CloneAny(data: any): any {\r\n    return JSON.parse(JSON.stringify(data));\r\n  }\r\n\r\n  public static Pitagoras(a: Point, b: Point): number {\r\n    return Math.sqrt(Math.pow(a.X - b.X, 2) + Math.pow(a.Y - b.Y, 2) + Math.pow(a.Z - b.Z, 2));\r\n  }\r\n\r\n  public static DecimalPlaces(n: number) {\r\n    let a;\r\n    return (a=(n.toString().charAt(0)=='-'?n-1:n+1).toString().replace(/^-?[0-9]+\\.?([0-9]+)$/,'$1').length)>=1?a:0;\r\n  }\r\n\r\n  public static IdxMatrixToVector(point: Point, width: number, stepX = 1, stepY = 1): number {\r\n    return Math.trunc((point.Y) * width + (point.X));\r\n  }\r\n\r\n  public static IdxVectorToMatrix(idx: number, width: number, stepX = 1, stepY = 1): Point {\r\n    return new Point((idx % width), (idx / width), 0);\r\n  }\r\n\r\n  public static Matrix(width = 200, height = 100, action: (x: number, y: number) => void = () => null, initx = 0, inity = 0, increment = 1) {\r\n    const ini = new Date();\r\n    let count = 0;\r\n    for (let y = inity; y < height; y += increment) {\r\n      for (let x = initx; x < width; y += increment) {\r\n        if (action !== null) action(x, y);\r\n      }\r\n    }\r\n    const end = new Date();\r\n    console.log(`duration [Matrix] ${ initx > 0 || inity > 0 ? `${initx}:${inity}` : '' } ${width}:${height} ${ increment > 1 ? increment : '' } ${Helper.TruncDecimals(end.getTime() / 1000 - ini.getTime() / 1000, 3)}s with count: ${count}`);\r\n  }\r\n}","import { Point } from 'src/_model/point';\r\n\r\nexport class Perlin {\r\n  private static perlin(x, y, z, p) {\r\n    const X = Math.floor(x) & 255,\r\n      Y = Math.floor(y) & 255,\r\n      Z = Math.floor(z) & 255;\r\n    x -= Math.floor(x);\r\n    y -= Math.floor(y);\r\n    z -= Math.floor(z);\r\n    const u = this.fade(x),\r\n      v = this.fade(y),\r\n      w = this.fade(z);\r\n    const A = p[X] + Y, AA = p[A] + Z, AB = p[A + 1] + Z,\r\n      B = p[X + 1] + Y, BA = p[B] + Z, BB = p[B + 1] + Z;\r\n\r\n    return this.lerp(w, this.lerp(v, this.lerp(u, this.grad(p[AA], x, y, z),\r\n      this.grad(p[BA], x - 1, y, z)),\r\n      this.lerp(u, this.grad(p[AB], x, y - 1, z),\r\n        this.grad(p[BB], x - 1, y - 1, z))),\r\n      this.lerp(v, this.lerp(u, this.grad(p[AA + 1], x, y, z - 1),\r\n        this.grad(p[BA + 1], x - 1, y, z - 1)),\r\n        this.lerp(u, this.grad(p[AB + 1], x, y - 1, z - 1),\r\n          this.grad(p[BB + 1], x - 1, y - 1, z - 1))));\r\n  }\r\n  private static fade(t) { return t * t * t * (t * (t * 6 - 15) + 10); }\r\n  private static lerp(t, a, b) { return a + t * (b - a); }\r\n  private static grad(hash, x, y, z) {\r\n    const h = hash & 15;\r\n    const u = h < 8 ? x : y,\r\n      v = h < 4 ? y : h == 12 || h == 14 ? x : z;\r\n    return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\r\n  };\r\n\r\n  private static octaves(x, y, z, p, persistence = 0.5, octaves = 6) {\r\n    let total = 0;\r\n    let frequency = 1;\r\n    let amplitude = 1;\r\n    let maxValue = 0;\r\n    for (let i = 0; i < octaves; i++) {\r\n      total += this.perlin(x * frequency, y * frequency, z * frequency, p) * amplitude;\r\n      maxValue += amplitude;\r\n      amplitude *= persistence;\r\n      frequency *= 2;\r\n    }\r\n    return total / maxValue;\r\n  }\r\n\r\n  public static readonly DefaultP = [151, 160, 137, 91, 90, 15,\r\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\r\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\r\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\r\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\r\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\r\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\r\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\r\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\r\n    129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\r\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\r\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\r\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\r\n\r\n  public static get RandomP(): number[] {\r\n    const array = new Uint8Array(256);\r\n    window.crypto.getRandomValues(array);\r\n    const list = [];\r\n    array.forEach((v) => list.push(v));\r\n    return list;\r\n  }\r\n\r\n  public static Noise(point: Point, factor = 1, p, persistence = 0.5, octaves = 6) {\r\n    return this.octaves(point.X/factor, point.Y/factor, point.Z/factor, p, persistence, octaves);\r\n  }\r\n}","import { Helper } from \"./helper\";\n\nexport class Progress {\n  private progress: number;\n  private total: number;\n  public step: number = 0;\n  private ini: Date;\n  constructor(total: number) {\n    this.total = total;\n    this.step = this.total / 10;\n    this.progress = 0;\n  }\n\n  start() {\n    this.ini = new Date();\n    console.log(`start ${this.total}`, this.ini);\n  }\n\n  stop() {\n    const end = new Date();\n    console.log(`duration ${Helper.TruncDecimals(end.getTime() / 1000 - this.ini.getTime() / 1000, 3)}s ${end}`);\n  }\n\n  check() {\n    this.progress++;\n    if (this.progress % this.step === 0) {\n      console.log(`${Math.round((this.progress * 100) / this.total)}%`);\n    }\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'World';\n}\n","<map-tool>\r\n</map-tool>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapToolComponent } from 'src/_component/map-tool/map-tool.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapToolComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}